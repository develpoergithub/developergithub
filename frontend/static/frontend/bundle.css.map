{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\..\\svelte-frontend\\src\\Header.svelte",
    "..\\..\\..\\svelte-frontend\\src\\Home.svelte",
    "..\\..\\..\\svelte-frontend\\src\\NotFound.svelte",
    "..\\..\\..\\svelte-frontend\\src\\Notification.svelte",
    "..\\..\\..\\svelte-frontend\\src\\account\\SignUp.svelte",
    "..\\..\\..\\svelte-frontend\\src\\account\\LogIn.svelte",
    "..\\..\\..\\svelte-frontend\\src\\account\\ForgotPassword.svelte",
    "..\\..\\..\\svelte-frontend\\src\\account\\RecoverAccount.svelte",
    "..\\..\\..\\svelte-frontend\\src\\account\\VerifyAccount.svelte",
    "..\\..\\..\\svelte-frontend\\src\\dashboard\\DashBoard.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { push } from \"svelte-spa-router\";\r\n  import { keepMeLoggedIn, isLoggedIn, refreshToken, user } from \"./store.js\";\r\n  import { logout } from \"./authMethods.js\";\r\n\r\n  function handleLogout() {\r\n    logout();\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .navbar {\r\n    max-height: 55px !important;\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <nav class=\"navbar sticky-top navbar-expand-sm navbar-light bg-light\">\r\n    <a class=\"navbar-brand\" href=\"#/\">SWAPBOARD</a>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-toggle=\"collapse\"\r\n      data-target=\"#navbarSupportedContent\"\r\n      aria-controls=\"navbarSupportedContent\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\" />\r\n    </button>\r\n    {#if $isLoggedIn}\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav ml-auto\">\r\n          <li class=\"nav-item dropdown\">\r\n            <a\r\n              class=\"nav-link dropdown-toggle\"\r\n              href=\"#/\"\r\n              id=\"navbarDropdown\"\r\n              role=\"button\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\">\r\n              {$user.email}\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n              <a class=\"dropdown-item\" href=\"#/\">Profile</a>\r\n              <div class=\"dropdown-divider\" />\r\n              {#if $isLoggedIn}\r\n                <a on:click={handleLogout} class=\"dropdown-item\" href=\"#/\">\r\n                  Logout\r\n                </a>\r\n              {/if}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    {/if}\r\n  </nav>\r\n</main>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n  import AuthRoute from \"./AuthRoute.svelte\";\r\n</script>\r\n\r\n<style>\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<AuthRoute />\r\n<div in:fade={{ duration: 500 }}>\r\n  <h1>Home Page</h1>\r\n</div>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n</script>\r\n\r\n<style>\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<div in:fade={{ duration: 500 }}>\r\n  <h1>404 Error: Page Not Found</h1>\r\n</div>\r\n",
    "<script context=\"module\">\r\n  import { setContext, getContext } from \"svelte\";\r\n\r\n  export function setNotoContext(contextObject) {\r\n    setContext(\"notoKey\", contextObject);\r\n  }\r\n\r\n  export function getNotoContext() {\r\n    const ctx = getContext(\"notoKey\");\r\n    return {\r\n      get: () => ctx,\r\n      update: newValue => (ctx.value = newValue)\r\n    };\r\n  }\r\n</script>\r\n\r\n<script>\r\n  let count = 0;\r\n  let toasts = [];\r\n  let themes = {\r\n    danger: \"#bb2124\",\r\n    success: \"#22bb33\",\r\n    warning: \"#f0ad4e\",\r\n    info: \"#5bc0de\",\r\n    default: \"#aaaaaa\"\r\n  };\r\n  function animateOut(node, { delay = 0, duration = 300 }) {\r\n    function vhTOpx(value) {\r\n      var w = window,\r\n        d = document,\r\n        e = d.documentElement,\r\n        g = d.getElementsByTagName(\"body\")[0],\r\n        x = w.innerWidth || e.clientWidth || g.clientWidth,\r\n        y = w.innerHeight || e.clientHeight || g.clientHeight;\r\n      return (y * value) / 100;\r\n    }\r\n\r\n    return {\r\n      delay,\r\n      duration,\r\n      css: t =>\r\n        `opacity: ${(t - 0.5) *\r\n          1}; transform-origin: top right; transform: scaleX(${(t - 0.5) * 1});`\r\n    };\r\n  }\r\n  function createToast(msg, theme, timeout) {\r\n    const background = themes[theme] || themes[\"default\"];\r\n    toasts = [\r\n      {\r\n        id: count,\r\n        msg,\r\n        background,\r\n        timeout,\r\n        width: \"100%\"\r\n      },\r\n      ...toasts\r\n    ];\r\n    count = count + 1;\r\n  }\r\n\r\n  export function removeToast(id) {\r\n    toasts = toasts.filter(t => t.id != id);\r\n  }\r\n\r\n  export function show(msg, timeout = 3000, theme = \"default\") {\r\n    createToast(msg, theme, timeout);\r\n  }\r\n\r\n  export function danger(msg, timeout) {\r\n    show(msg, timeout, \"danger\");\r\n  }\r\n\r\n  export function warning(msg, timeout) {\r\n    show(msg, timeout, \"warning\");\r\n  }\r\n\r\n  export function info(msg, timeout) {\r\n    show(msg, timeout, \"info\");\r\n  }\r\n\r\n  export function success(msg, timeout) {\r\n    show(msg, timeout, \"success\");\r\n  }\r\n</script>\r\n\r\n<style>\r\n  :global(.toasts) {\r\n    list-style: none;\r\n    position: fixed;\r\n    top: 5.8%;\r\n    right: 39.25%;\r\n    padding: 0;\r\n    margin: 0;\r\n    z-index: 9999;\r\n  }\r\n\r\n  :global(.toasts) > .toast {\r\n    position: relative;\r\n    margin: 10px;\r\n    min-width: 20vw;\r\n    position: relative;\r\n    animation: animate-in 350ms forwards;\r\n    color: #fff;\r\n  }\r\n\r\n  :global(.toasts) > .toast > .content {\r\n    padding: 10px;\r\n    display: block;\r\n    font-weight: 500;\r\n  }\r\n\r\n  :global(.toasts) > .toast > .progress {\r\n    position: absolute;\r\n    bottom: 0;\r\n    background-color: rgb(0, 0, 0, 0.3);\r\n    height: 6px;\r\n    width: 100%;\r\n    animation-name: shrink;\r\n    animation-timing-function: linear;\r\n    animation-fill-mode: forwards;\r\n  }\r\n\r\n  :global(.toasts) > .toast:before,\r\n  :global(.toasts) > .toast:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    z-index: -1;\r\n    top: 50%;\r\n    bottom: 0;\r\n    left: 10px;\r\n    right: 10px;\r\n    border-radius: 100px / 10px;\r\n  }\r\n\r\n  :global(.toasts) > .toast:after {\r\n    right: 10px;\r\n    left: auto;\r\n    transform: skew(8deg) rotate(3deg);\r\n  }\r\n\r\n  @keyframes animate-in {\r\n    0% {\r\n      width: 0;\r\n      opacity: 0;\r\n      transform: scale(1.15) translateY(20px);\r\n    }\r\n    100% {\r\n      width: 30vw;\r\n      opacity: 1;\r\n      transform: scale(1) translateY(0);\r\n    }\r\n  }\r\n\r\n  @keyframes shrink {\r\n    0% {\r\n      width: 30vw;\r\n    }\r\n    100% {\r\n      width: 0;\r\n    }\r\n  }\r\n</style>\r\n\r\n<ul class=\"toasts\">\r\n  {#each toasts as toast (toast.id)}\r\n    <li class=\"toast\" style=\"background: {toast.background};\" out:animateOut>\r\n      <div class=\"content\">{toast.msg}</div>\r\n      <div\r\n        class=\"progress\"\r\n        style=\"animation-duration: {toast.timeout}ms;\"\r\n        on:animationend={() => removeToast(toast.id)} />\r\n    </li>\r\n  {/each}\r\n</ul>\r\n",
    "<script>\r\n  import { push, pop, replace } from \"svelte-spa-router\";\r\n  import { getClient, query, mutate } from \"svelte-apollo\";\r\n  import { CREATE_USER } from \"../queries.js\";\r\n  import { fade } from \"svelte/transition\";\r\n  import { isLoggedIn } from \"../store.js\";\r\n  import { notifications } from \"../Noto.svelte\";\r\n  import { register } from \"../authMethods.js\";\r\n  import AuthRoute from \"../AuthRoute.svelte\";\r\n\r\n  // if ($isLoggedIn === true) {\r\n  //   push(\"/dashboard/\");\r\n  // }\r\n\r\n  const client = getClient();\r\n\r\n  let userTypeChoices = [\r\n    { id: 0, text: `Signup as company or employee` },\r\n    { id: 1, text: `Employee` },\r\n    { id: 2, text: `Company` }\r\n  ];\r\n\r\n  let selectedUserType = userTypeChoices;\r\n  let name = \"\";\r\n  let placeHolderName = \"\";\r\n  let email = \"\";\r\n  let password = \"\";\r\n  let confirmPassword = \"\";\r\n  let isCompany = false;\r\n  let formIsDisabled = false;\r\n\r\n  $: if (selectedUserType.id === 1) {\r\n    placeHolderName = \"your name\";\r\n  } else if (selectedUserType.id === 2) {\r\n    placeHolderName = \"company name\";\r\n  } else {\r\n    placeHolderName = \"company or employee name\";\r\n  }\r\n\r\n  async function handleSubmit() {\r\n    formIsDisabled = true;\r\n\r\n    setTimeout(() => {\r\n      formIsDisabled = false;\r\n    }, 2000);\r\n\r\n    if (name.trim().length === 0) {\r\n      name = \"\";\r\n      return notifications.danger(\"You must enter a name\");\r\n    }\r\n\r\n    if (email.trim().length === 0) {\r\n      email = \"\";\r\n      return notifications.danger(\"You must enter an email\");\r\n    }\r\n\r\n    if (selectedUserType.id === 1) {\r\n      isCompany = false;\r\n    } else if (selectedUserType.id === 2) {\r\n      isCompany = true;\r\n    } else {\r\n      return notifications.danger(\"You must signup as a company or employee!\");\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      password = \"\";\r\n      confirmPassword = \"\";\r\n      return notifications.danger(\"Your passwords do not match!\");\r\n    }\r\n\r\n    try {\r\n      await register(client, isCompany, name, email, password);\r\n    } catch (error) {\r\n      return notifications.danger(\"Email already exist\");\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 5rem;\r\n  }\r\n  .card {\r\n    width: 25rem;\r\n    height: 37rem;\r\n  }\r\n  h3 {\r\n    text-align: center;\r\n    font-size: 25px;\r\n  }\r\n  h6 {\r\n    text-align: center;\r\n    color: rgb(193, 193, 193);\r\n  }\r\n  /* label {\r\n    margin-top: 10px;\r\n    font-size: 20px;\r\n  } */\r\n  .btn {\r\n    margin-top: 10px;\r\n    width: 22.5rem;\r\n    height: 50px;\r\n  }\r\n  .form-group {\r\n    margin-top: 15px;\r\n  }\r\n  .card-header {\r\n    background-color: rgb(0, 45, 66);\r\n    width: 25rem;\r\n    margin-top: -20px;\r\n    margin-left: -20px;\r\n    color: white;\r\n  }\r\n  p {\r\n    padding: 10px 0px;\r\n    text-align: center;\r\n  }\r\n  .note {\r\n    margin-top: -12px;\r\n  }\r\n</style>\r\n\r\n<AuthRoute />\r\n<main>\r\n  <div class=\"card .mx-auto\" in:fade={{ duration: 500 }}>\r\n    <div class=\"card-body\">\r\n      <div class=\"card-header rounded-top\">\r\n        <h3 class=\"card-title\">Create Account</h3>\r\n        <h6 class=\"card-subtitle mb-2\">\r\n          Please fill in the form below to create an account on SwapBoard\r\n        </h6>\r\n      </div>\r\n      <form on:submit|preventDefault={handleSubmit}>\r\n        <fieldset disabled={formIsDisabled}>\r\n          <div class=\"input-group mb-3\">\r\n            <select bind:value={selectedUserType} class=\"custom-select\">\r\n              {#each userTypeChoices as choice}\r\n                <option value={choice}>{choice.text}</option>\r\n              {/each}\r\n            </select>\r\n          </div>\r\n          <small id=\"inputGroupSelect01\" class=\"form-text text-muted note\">\r\n            Please note that you can not change this later.\r\n          </small>\r\n          <div class=\"form-group\">\r\n            <!-- <label for=\"exampleInputPassword1\">Password</label> -->\r\n            <input\r\n              bind:value={name}\r\n              type=\"text\"\r\n              class=\"form-control text\"\r\n              id=\"exampleInputText1\"\r\n              placeholder={placeHolderName}\r\n              required\r\n              maxlength=\"60\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <!-- <label for=\"exampleInputEmail1\">Email address</label> -->\r\n            <input\r\n              bind:value={email}\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter a valid email address\"\r\n              required />\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <!-- <label for=\"exampleInputPassword1\">Password</label> -->\r\n            <input\r\n              bind:value={password}\r\n              type=\"password\"\r\n              class=\"form-control password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              minlength=\"8\"\r\n              maxlength=\"30\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <!-- <label for=\"exampleInputPassword1\">Password</label> -->\r\n            <input\r\n              bind:value={confirmPassword}\r\n              type=\"password\"\r\n              class=\"form-control password\"\r\n              id=\"confirmPassword\"\r\n              placeholder=\"Confirm Password\"\r\n              required\r\n              minlength=\"8\"\r\n              maxlength=\"30\" />\r\n          </div>\r\n          <div class=\"form-group form-check\" />\r\n          <button type=\"submit\" class=\"btn btn-primary\">\r\n            <h5>SignUp</h5>\r\n          </button>\r\n          <p class=\"form-text text-muted\">\r\n            Already registered?\r\n            <a href=\"#/login\">Login</a>\r\n            or\r\n            <a href=\"#/verifyaccount\">Verify your account</a>\r\n          </p>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import { onMount, getContext } from \"svelte\";\r\n  import { push, pop, replace } from \"svelte-spa-router\";\r\n  import { fade } from \"svelte/transition\";\r\n  import { getClient, query, mutate } from \"svelte-apollo\";\r\n  import AuthRoute from \"../AuthRoute.svelte\";\r\n  import { login, tokenRefreshTimeoutFunc } from \"../authMethods.js\";\r\n  import { notifications } from \"../Noto.svelte\";\r\n  // if ($isLoggedIn === true) {\r\n  //   push(\"/dashboard/\");\r\n  // }\r\n\r\n  const client = getClient();\r\n  let email = \"\";\r\n  let password = \"\";\r\n  let isKeepMeLoggedIn = false;\r\n  let formIsDisabled = false;\r\n\r\n  async function handleSubmit() {\r\n    formIsDisabled = true;\r\n\r\n    setTimeout(() => {\r\n      formIsDisabled = false;\r\n    }, 2000);\r\n\r\n    if (email.trim().length === 0 || password.trim().length === 0) {\r\n      const msg = \"Email or password fields can not be empty!\";\r\n      return notifications.danger(msg, 3000);\r\n    }\r\n\r\n    try {\r\n      await login(client, email, password, isKeepMeLoggedIn);\r\n    } catch (error) {\r\n      // console.log(error);\r\n      password = \"\";\r\n      let msg = \"Please make sure your email and password are correct!\";\r\n      notifications.danger(msg, 3000);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 10rem;\r\n  }\r\n  .card {\r\n    width: 22rem;\r\n    height: 28rem;\r\n  }\r\n  h3 {\r\n    text-align: center;\r\n    font-size: 25px;\r\n  }\r\n  h6 {\r\n    text-align: center;\r\n    color: rgb(193, 193, 193);\r\n  }\r\n  /* label {\r\n    margin-top: 10px;\r\n    font-size: 20px;\r\n  } */\r\n  .btn {\r\n    margin-top: 10px;\r\n    width: 310px;\r\n    height: 50px;\r\n  }\r\n  .form-group {\r\n    margin-top: 15px;\r\n  }\r\n  .card-header {\r\n    background-color: rgb(0, 45, 66);\r\n    width: 22rem;\r\n    margin-top: -20px;\r\n    margin-left: -20px;\r\n    color: white;\r\n  }\r\n  .ca {\r\n    padding: 10px 0px;\r\n    text-align: center;\r\n  }\r\n  .fp {\r\n    margin: -10px 0px;\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<AuthRoute />\r\n<main>\r\n  <div class=\"card\" in:fade={{ duration: 500 }}>\r\n    <div class=\"card-body\">\r\n      <div class=\"card-header rounded-top\">\r\n        <h3 class=\"card-title\">Log into SwapBoard</h3>\r\n        <h6 class=\"card-subtitle mb-2\">\r\n          Please enter your email and password to login\r\n        </h6>\r\n      </div>\r\n      <form on:submit|preventDefault={handleSubmit}>\r\n        <fieldset disabled={formIsDisabled}>\r\n          <div class=\"form-group {formIsDisabled}\">\r\n            <!-- <label for=\"exampleInputEmail1\">Email address</label> -->\r\n            <input\r\n              bind:value={email}\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter email\"\r\n              required />\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <!-- <label for=\"exampleInputPassword1\">Password</label> -->\r\n            <input\r\n              bind:value={password}\r\n              type=\"password\"\r\n              class=\"form-control password\"\r\n              id=\"exampleInputPassword1\"\r\n              placeholder=\"Password\"\r\n              required\r\n              minlength=\"8\"\r\n              maxlength=\"30\" />\r\n          </div>\r\n          <div class=\"form-group form-check\">\r\n            <input\r\n              bind:checked={isKeepMeLoggedIn}\r\n              type=\"checkbox\"\r\n              class=\"form-check-input\"\r\n              id=\"exampleCheck1\" />\r\n            <label class=\"form-check-label\" for=\"exampleCheck1\">\r\n              keep me logged in\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\">\r\n            <h5>Login</h5>\r\n          </button>\r\n          <p class=\"form-text text-muted ca\">\r\n            Not registered?\r\n            <a href=\"#/signup\">Create an account</a>\r\n          </p>\r\n          <p class=\"form-text text-muted fp\">\r\n            <a href=\"#/recoveraccount\">Forgort Password?</a>\r\n          </p>\r\n          <p class=\"form-text text-muted ca\">\r\n            <a href=\"#/verifyaccount\">Verify your account?</a>\r\n          </p>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n</script>\r\n\r\n<style>\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<div in:fade={{ duration: 500 }}>\r\n  <h1>Forgot Password Page</h1>\r\n</div>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n</script>\r\n\r\n<style>\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<div in:fade={{ duration: 500 }}>\r\n  <h1>Recover Account Page</h1>\r\n</div>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n  import { push, pop, replace } from \"svelte-spa-router\";\r\n  import { getClient, query, mutate } from \"svelte-apollo\";\r\n  import { activateAccount } from \"../authMethods.js\";\r\n  import { notifications } from \"../Noto.svelte\";\r\n\r\n  const client = getClient();\r\n\r\n  let email = \"\";\r\n  let code = \"\";\r\n  let formIsDisabled = false;\r\n\r\n  async function handleSubmit() {\r\n    formIsDisabled = true;\r\n\r\n    setTimeout(() => {\r\n      formIsDisabled = false;\r\n    }, 2000);\r\n\r\n    if (email.trim().length === 0 || code.trim().length === 0) {\r\n      email = \"\";\r\n      code = \"\";\r\n      return notifications.danger(\"Email or code fields can not be empty\");\r\n    }\r\n\r\n    try {\r\n      await activateAccount(client, email, code);\r\n    } catch (error) {\r\n      // console.log(error);\r\n      notifications.danger(\"Please make sure your code and email are correct\");\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 10rem;\r\n  }\r\n  .card {\r\n    width: 22rem;\r\n    height: 20rem;\r\n  }\r\n  h3 {\r\n    text-align: center;\r\n    font-size: 25px;\r\n  }\r\n  h6 {\r\n    text-align: center;\r\n    color: rgb(193, 193, 193);\r\n  }\r\n  /* label {\r\n    margin-top: 10px;\r\n    font-size: 20px;\r\n  } */\r\n  .btn {\r\n    margin-top: 10px;\r\n    width: 310px;\r\n    height: 50px;\r\n  }\r\n  .form-group {\r\n    margin-top: 15px;\r\n  }\r\n  .card-header {\r\n    background-color: rgb(0, 45, 66);\r\n    width: 22rem;\r\n    margin-top: -20px;\r\n    margin-left: -20px;\r\n    color: white;\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <div class=\"card\" in:fade={{ duration: 500 }}>\r\n    <div class=\"card-body\">\r\n      <div class=\"card-header rounded-top\">\r\n        <h3 class=\"card-title\">Verify Account</h3>\r\n        <h6 class=\"card-subtitle mb-2\">\r\n          Please enter your email and the code that was sent to your email\r\n        </h6>\r\n      </div>\r\n      <form on:submit|preventDefault={handleSubmit}>\r\n        <fieldset disabled={formIsDisabled}>\r\n          <div class=\"form-group\">\r\n            <!-- <label for=\"exampleInputEmail1\">Email address</label> -->\r\n            <input\r\n              bind:value={email}\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter email\" />\r\n            <input\r\n              bind:value={code}\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputText1\"\r\n              aria-describedby=\"textHelp\"\r\n              placeholder=\"Enter code\" />\r\n          </div>\r\n\r\n          <div class=\"form-group form-check\" />\r\n          <button type=\"submit\" class=\"btn btn-primary\">\r\n            <h5>Confirm Account</h5>\r\n          </button>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { fade } from \"svelte/transition\";\r\n  import Router, { push, pop, replace } from \"svelte-spa-router\";\r\n  import { routes } from \"../DashBoardRoutes.svelte\";\r\n  import { isLoggedIn, refreshToken, user } from \"../store.js\";\r\n  import { getClient, query, mutate } from \"svelte-apollo\";\r\n  import { GET_USER } from \"../queries.js\";\r\n  import { tokenRefreshTimeoutFunc } from \"../authMethods.js\";\r\n\r\n  const client = getClient();\r\n\r\n  const getUser = query(client, {\r\n    query: GET_USER\r\n  });\r\n\r\n  async function fetchUser() {\r\n    try {\r\n      await getUser.refetch().then(result => {\r\n        user.set(result.data.me);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      //tokenRefreshTimeoutFunc(client);\r\n    }\r\n  }\r\n\r\n  onMount(async () => {\r\n    if ($isLoggedIn === false) {\r\n      return push(\"/login\");\r\n    }\r\n\r\n    fetchUser();\r\n  });\r\n</script>\r\n\r\n<style>\r\n  p {\r\n    text-align: center;\r\n  }\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n</style>\r\n\r\n<div in:fade={{ duration: 500 }}>\r\n  <p>This is a work in progress check back later!</p>\r\n</div>\r\n<Router {routes} />\r\n"
  ],
  "names": [],
  "mappings": "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"
}