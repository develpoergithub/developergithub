{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\..\\svelte-frontend\\src\\App.svelte",
    "..\\..\\..\\svelte-frontend\\src\\Header.svelte",
    "..\\..\\..\\svelte-frontend\\src\\Notification.svelte",
    "..\\..\\..\\svelte-frontend\\src\\Home.svelte",
    "..\\..\\..\\svelte-frontend\\src\\NotFound.svelte",
    "..\\..\\..\\svelte-frontend\\src\\account\\ForgotPassword.svelte",
    "..\\..\\..\\svelte-frontend\\src\\account\\VerifyAccount.svelte",
    "..\\..\\..\\svelte-frontend\\src\\account\\LogIn.svelte",
    "..\\..\\..\\svelte-frontend\\src\\account\\SignUp.svelte",
    "..\\..\\..\\svelte-frontend\\src\\account\\RecoverAccount.svelte",
    "..\\..\\..\\svelte-frontend\\src\\dashboard\\InviteEmployee.svelte",
    "..\\..\\..\\svelte-frontend\\src\\dashboard\\DashBoard.svelte",
    "..\\..\\..\\svelte-frontend\\src\\dashboard\\Invitations.svelte",
    "..\\..\\..\\svelte-frontend\\src\\dashboard\\Shifts.svelte",
    "..\\..\\..\\svelte-frontend\\src\\dashboard\\PostShift.svelte",
    "..\\..\\..\\svelte-frontend\\src\\dashboard\\MyShifts.svelte",
    "..\\..\\..\\svelte-frontend\\node_modules\\svelte-calendar\\src\\Components\\Datepicker.svelte",
    "..\\..\\..\\svelte-frontend\\src\\dashboard\\Invitation.svelte",
    "..\\..\\..\\svelte-frontend\\src\\TableView.svelte",
    "..\\..\\..\\svelte-frontend\\node_modules\\svelte-calendar\\src\\Components\\Month.svelte",
    "..\\..\\..\\svelte-frontend\\node_modules\\svelte-calendar\\src\\Components\\NavBar.svelte",
    "..\\..\\..\\svelte-frontend\\node_modules\\svelte-calendar\\src\\Components\\Popover.svelte",
    "..\\..\\..\\svelte-frontend\\node_modules\\svelte-calendar\\src\\Components\\Week.svelte"
  ],
  "sourcesContent": [
    "<script context=\"module\">\r\n  export let notification;\r\n</script>\r\n\r\n<script>\r\n  import { onMount, afterUpdate, beforeUpdate, setContext } from \"svelte\";\r\n  import Router, { push, pop, replace, location } from \"svelte-spa-router\";\r\n  import { routes } from \"./Routes.svelte\";\r\n  import Header from \"./Header.svelte\";\r\n  import ApolloClient from \"apollo-boost\";\r\n  import { InMemoryCache } from \"apollo-cache-inmemory\";\r\n  import { HttpLink } from \"apollo-link-http\";\r\n  import { WebSocketLink } from \"apollo-link-ws\";\r\n  import { getMainDefinition } from \"apollo-utilities\";\r\n  import { onError } from \"apollo-link-error\";\r\n  import { split } from \"apollo-link\";\r\n  import { SubscriptionClient } from \"subscriptions-transport-ws\";\r\n  import { setClient, getClient, query, mutate } from \"svelte-apollo\";\r\n  import {\r\n    keepMeLoggedIn,\r\n    isLoggedIn,\r\n    lastLoggedIn,\r\n    refreshToken,\r\n    user,\r\n    selectedCompany,\r\n    shifts,\r\n    myShifts,\r\n    menuDisplayed\r\n  } from \"./store.js\";\r\n  import { useLocalStorage, useSessionStorage } from \"./storage.js\";\r\n  import {\r\n    checkSession,\r\n    fetchUser,\r\n    fetchConnections,\r\n    fetchShifts,\r\n    fetchShiftConnections,\r\n    tokenRefreshTimeoutFunc,\r\n    clearTokenRefreshTimeout\r\n  } from \"./authMethods.js\";\r\n  import Noto, { notifications } from \"./Noto.svelte\";\r\n\r\n  let selectedCompanyId = \"\";\r\n\r\n  const HTTP_GRAPHQL_ENDPOINT =\r\n    (window.location.protocol.includes(\"https\") ? \"https\" : \"http\") +\r\n    \"://\" +\r\n    window.location.host +\r\n    \"/graphql\";\r\n\r\n  const WS_GRAPHQL_ENDPOINT =\r\n    (window.location.protocol.includes(\"https\") ? \"wss\" : \"ws\") +\r\n    \"://\" +\r\n    window.location.host +\r\n    \"/graphql\";\r\n\r\n  // console.log(\"PROTOCOL HTTP : \" + HTTP_GRAPHQL_ENDPOINT);\r\n  // console.log(\"PROTOCOL WS : \" + WS_GRAPHQL_ENDPOINT);\r\n\r\n  // const httpLink = new HttpLink({\r\n  //   uri: HTTP_GRAPHQL_ENDPOINT\r\n  //   // credentials: 'same-origin'\r\n  // });\r\n\r\n  // const wsLink = new WebSocketLink({\r\n  //   uri: WS_GRAPHQL_ENDPOINT,\r\n  //   options: {\r\n  //     reconnect: true\r\n  //   }\r\n  // });\r\n\r\n  // const link = split(\r\n  //   ({ query }) => {\r\n  //     const { kind, operation } = getMainDefinition(query);\r\n  //     return kind === \"OperationDefinition\" && operation === \"subscription\";\r\n  //   },\r\n  //   wsLink,\r\n  //   httpLink\r\n  // );\r\n\r\n  const client = new ApolloClient({\r\n    cache: new InMemoryCache(),\r\n    uri: HTTP_GRAPHQL_ENDPOINT\r\n  });\r\n\r\n  setClient(client);\r\n\r\n  useSessionStorage(isLoggedIn, \"isLoggedIn\");\r\n  useLocalStorage(keepMeLoggedIn, \"keepMeLoggedIn\");\r\n  useLocalStorage(refreshToken, \"refreshToken\");\r\n  useLocalStorage(lastLoggedIn, \"lastLoggedIn\");\r\n  // useLocalStorage(user, \"user\");\r\n\r\n  window.addEventListener(\"storage\", function(event) {\r\n    if (event.key === \"login-event\") {\r\n      if (!$isLoggedIn) {\r\n        setTimeout(() => {\r\n          isLoggedIn.set(true);\r\n        }, Math.random() * (1000 - 500) + 500);\r\n      }\r\n    } else if (event.key === \"logout-event\") {\r\n      isLoggedIn.set(false);\r\n      sessionStorage.setItem(\"startedTimeoutSession\", JSON.stringify(false));\r\n    } else if (event.key === \"start-timeout-event\") {\r\n      setTimeout(() => {\r\n        tokenRefreshTimeoutFunc(client);\r\n      }, Math.random() * (10000 - 5000) + 5000);\r\n    } else if (event.key === \"new-tab-event\") {\r\n      if ($isLoggedIn) {\r\n        localStorage.setItem(\"login-event\", \"login\" + Math.random());\r\n      }\r\n    }\r\n  });\r\n\r\n  window.addEventListener(\"beforeunload\", function(event) {\r\n    if (sessionStorage.getItem(\"startedTimeoutSession\") === null) {\r\n      return;\r\n    }\r\n\r\n    if (JSON.parse(sessionStorage.getItem(\"startedTimeoutSession\")) === true) {\r\n      sessionStorage.setItem(\"startedTimeoutSession\", JSON.stringify(false));\r\n      localStorage.setItem(\"startedTimeout\", JSON.stringify(false));\r\n      localStorage.setItem(\"start-timeout-event\", \"timeout\" + Math.random());\r\n    }\r\n  });\r\n\r\n  // if ($keepMeLoggedIn === true && $isLoggedIn === false) {\r\n  //   isLoggedIn.set(true);\r\n  //   menuDisplayed.set(true);\r\n  //   tokenRefreshTimeoutFunc(client);\r\n  //   fetchUser(client);\r\n  //   fetchConnections(client);\r\n  // } else if ($isLoggedIn === true) {\r\n  //   menuDisplayed.set(true);\r\n  //   tokenRefreshTimeoutFunc(client);\r\n  //   fetchUser(client);\r\n  //   fetchConnections(client);\r\n  // } else {\r\n  //   localStorage.setItem(\"new-tab-event\", \"newtab\" + Math.random());\r\n  // }\r\n\r\n  $: if ($isLoggedIn === false) {\r\n    loggedOutFunc();\r\n  } else {\r\n    loggedInFunc();\r\n  }\r\n\r\n  async function loggedInFunc() {\r\n    // console.log(\"loggedIn, pushing to /dashboard\");\r\n    push(\"/dashboard\");\r\n    menuDisplayed.set(true);\r\n    await tokenRefreshTimeoutFunc(client);\r\n    await fetchUser(client);\r\n    await fetchConnections(client);\r\n    if ($user.isCompany) {\r\n      selectedCompanyId = $user.id;\r\n      getShifts();\r\n    }\r\n  }\r\n\r\n  async function loggedOutFunc() {\r\n    menuDisplayed.set(false);\r\n    clearTokenRefreshTimeout();\r\n    push(\"/login\");\r\n    console.log(\"loggedOut, pushing to /login\");\r\n  }\r\n\r\n  $: if (window.screen.availWidth < 640) {\r\n    menuDisplayed.set(false);\r\n  }\r\n\r\n  onMount(async () => {\r\n    if ($isLoggedIn) {\r\n      console.log(\"Already Logged In\");\r\n      return;\r\n    }\r\n\r\n    if ($keepMeLoggedIn) {\r\n      console.log(\"Keep Me Logged In is True\");\r\n      isLoggedIn.set(true);\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem(\"new-tab-event\", \"newTab\" + Math.random());\r\n\r\n    // CHECK USER IF USER IS IN SESSION\r\n    // await checkSession(client);\r\n  });\r\n\r\n  $: if ($selectedCompany) {\r\n    selectedCompanyId = $selectedCompany.id;\r\n    getShifts();\r\n  }\r\n\r\n  async function getShifts() {\r\n    if (selectedCompanyId) {\r\n      await fetchShifts(client, selectedCompanyId);\r\n      $myShifts = $shifts.filter(shift => shift.postedBy.id === $user.id);\r\n      await fetchShiftConnections(client, selectedCompanyId);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  #wrapper {\r\n    margin-top: 55px;\r\n  }\r\n  /* Sidebar */\r\n  #sidebar-wrapper {\r\n    z-index: 1;\r\n    position: fixed;\r\n    width: 0px;\r\n    height: 100%;\r\n    overflow-y: hidden;\r\n    background: grey;\r\n    opacity: 0.9;\r\n  }\r\n\r\n  /* Always take up entire screen */\r\n  #page-content-wrapper {\r\n    width: 100%;\r\n    position: absolute;\r\n    padding: 15px;\r\n  }\r\n\r\n  /* Change with of sidebar from 0 to 250px */\r\n  #wrapper.menuDisplayed #sidebar-wrapper {\r\n    width: 250px;\r\n  }\r\n\r\n  /* Since we added left padding, we need to shrink the width by 250px */\r\n  #wrapper.menuDisplayed #page-content-wrapper {\r\n    padding-left: 260px;\r\n  }\r\n\r\n  /* Sidebar styling - the entire ul list */\r\n  .sidebar-nav {\r\n    padding: 0;\r\n    list-style: none;\r\n  }\r\n\r\n  .sidebar-nav li {\r\n    text-indent: 20px;\r\n    line-height: 40px;\r\n  }\r\n\r\n  .sidebar-nav li a {\r\n    display: block;\r\n    text-decoration: none;\r\n    color: #ddd;\r\n  }\r\n\r\n  .sidebar-nav li a:hover {\r\n    background: #16a085;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    #wrapper.menuDisplayed #sidebar-wrapper {\r\n      display: none;\r\n    }\r\n\r\n    #wrapper.menuDisplayed #page-content-wrapper {\r\n      padding-left: 0px;\r\n    }\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <Header />\r\n  <div id=\"wrapper\" class={$menuDisplayed ? 'menuDisplayed' : ''}>\r\n\r\n    <div id=\"sidebar-wrapper\" class=\"\">\r\n\r\n      <ul class=\"sidebar-nav\">\r\n        {#if !$user.isCompany}\r\n          <li>\r\n            <a href=\"#/dashboard/postshift\">Post Shift</a>\r\n          </li>\r\n        {/if}\r\n        <li>\r\n          <a href=\"#/dashboard/shifts\">Shift</a>\r\n        </li>\r\n        {#if !$user.isCompany}\r\n          <li>\r\n            <a href=\"#/dashboard/myshifts\">My Shift</a>\r\n          </li>\r\n        {/if}\r\n        <li>\r\n          {#if $user.isCompany}\r\n            <a href=\"#/dashboard/invite\">Invite</a>\r\n          {:else}\r\n            <a href=\"#/dashboard/invitations\">Invitations</a>\r\n          {/if}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div id=\"page-content-wrapper\">\r\n      <Noto />\r\n\r\n      <Router {routes} />\r\n    </div>\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import { push } from \"svelte-spa-router\";\r\n  import {\r\n    keepMeLoggedIn,\r\n    isLoggedIn,\r\n    refreshToken,\r\n    user,\r\n    connections,\r\n    selectedCompany,\r\n    menuDisplayed\r\n  } from \"./store.js\";\r\n  import { logout } from \"./authMethods.js\";\r\n\r\n  let selectedUserConnection;\r\n\r\n  function handleLogout() {\r\n    logout();\r\n  }\r\n\r\n  function toggleMenu() {\r\n    menuDisplayed.set(!$menuDisplayed);\r\n  }\r\n\r\n  function assignSelectedCompany() {\r\n    selectedCompany.set(selectedUserConnection.company);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .navbar {\r\n    max-height: 55px !important;\r\n  }\r\n  .navbar-brand {\r\n    margin-left: 10px;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    #menu-toggler {\r\n      /* display: none; */\r\n    }\r\n  }\r\n\r\n  .dropdown-menu {\r\n    z-index: 99999;\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <nav class=\"navbar fixed-top navbar-expand-sm navbar-light bg-light\">\r\n    {#if $isLoggedIn}\r\n      <button on:click={toggleMenu} id=\"menu-toggler\" class=\"btn bg-light\">\r\n        <span class=\"navbar-toggler-icon\" />\r\n      </button>\r\n    {/if}\r\n    <a class=\"navbar-brand\" href=\"#/\">SWAPBOARD</a>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-toggle=\"collapse\"\r\n      data-target=\"#navbarSupportedContent\"\r\n      aria-controls=\"navbarSupportedContent\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\" />\r\n    </button>\r\n    {#if $isLoggedIn}\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav ml-auto\">\r\n          <!-- {#if $user.isCompany}\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#/dashboard/invite\">Invite Employee</a>\r\n            </li>\r\n          {/if}\r\n          {#if !$user.isCompany}\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#/dashboard/postshift\">Post Shift</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#/dashboard/shifts\">Shifts</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#/dashboard/invitations\">Invitations</a>\r\n            </li>\r\n          {/if} -->\r\n          {#if !$user.isCompany}\r\n            <li class=\"nav-item\">\r\n              <div class=\"input-group mb-3\">\r\n                <select\r\n                  on:change={assignSelectedCompany}\r\n                  bind:value={selectedUserConnection}\r\n                  id=\"company-selector\"\r\n                  class=\"custom-select\">\r\n                  <option value=\"\" selected disabled hidden>\r\n                    Select Company\r\n                  </option>\r\n                  {#if $connections.length > 0}\r\n                    {#each $connections as choice}\r\n                      <option value={choice}>\r\n                        {choice.company.userprofile.companyName}\r\n                      </option>\r\n                    {/each}\r\n                  {/if}\r\n                </select>\r\n              </div>\r\n            </li>\r\n          {/if}\r\n          <li class=\"nav-item dropdown\">\r\n            <a\r\n              class=\"nav-link dropdown-toggle\"\r\n              href=\"#/\"\r\n              id=\"navbarDropdown\"\r\n              role=\"button\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\">\r\n              {#if $user.email !== undefined}{$user.email}{:else}Loading...{/if}\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n              <a class=\"dropdown-item\" href=\"#/\">Profile</a>\r\n              <div class=\"dropdown-divider\" />\r\n              <a on:click={handleLogout} class=\"dropdown-item\" href=\"#/\">\r\n                Logout\r\n              </a>\r\n            </div>\r\n          </li>\r\n\r\n        </ul>\r\n      </div>\r\n    {/if}\r\n  </nav>\r\n</main>\r\n",
    "<script context=\"module\">\r\n  import { setContext, getContext } from \"svelte\";\r\n\r\n  export function setNotoContext(contextObject) {\r\n    setContext(\"notoKey\", contextObject);\r\n  }\r\n\r\n  export function getNotoContext() {\r\n    const ctx = getContext(\"notoKey\");\r\n    return {\r\n      get: () => ctx,\r\n      update: newValue => (ctx.value = newValue)\r\n    };\r\n  }\r\n</script>\r\n\r\n<script>\r\n  let count = 0;\r\n  let toasts = [];\r\n  let themes = {\r\n    danger: \"#bb2124\",\r\n    success: \"#22bb33\",\r\n    warning: \"#f0ad4e\",\r\n    info: \"#5bc0de\",\r\n    default: \"#aaaaaa\"\r\n  };\r\n  function animateOut(node, { delay = 0, duration = 300 }) {\r\n    function vhTOpx(value) {\r\n      var w = window,\r\n        d = document,\r\n        e = d.documentElement,\r\n        g = d.getElementsByTagName(\"body\")[0],\r\n        x = w.innerWidth || e.clientWidth || g.clientWidth,\r\n        y = w.innerHeight || e.clientHeight || g.clientHeight;\r\n      return (y * value) / 100;\r\n    }\r\n\r\n    return {\r\n      delay,\r\n      duration,\r\n      css: t =>\r\n        `opacity: ${(t - 0.5) *\r\n          1}; transform-origin: top right; transform: scaleX(${(t - 0.5) * 1});`\r\n    };\r\n  }\r\n  function createToast(msg, theme, timeout) {\r\n    const background = themes[theme] || themes[\"default\"];\r\n    toasts = [\r\n      {\r\n        id: count,\r\n        msg,\r\n        background,\r\n        timeout,\r\n        width: \"100%\"\r\n      },\r\n      ...toasts\r\n    ];\r\n    count = count + 1;\r\n  }\r\n\r\n  export function removeToast(id) {\r\n    toasts = toasts.filter(t => t.id != id);\r\n  }\r\n\r\n  export function show(msg, timeout = 3000, theme = \"default\") {\r\n    createToast(msg, theme, timeout);\r\n  }\r\n\r\n  export function danger(msg, timeout) {\r\n    show(msg, timeout, \"danger\");\r\n  }\r\n\r\n  export function warning(msg, timeout) {\r\n    show(msg, timeout, \"warning\");\r\n  }\r\n\r\n  export function info(msg, timeout) {\r\n    show(msg, timeout, \"info\");\r\n  }\r\n\r\n  export function success(msg, timeout) {\r\n    show(msg, timeout, \"success\");\r\n  }\r\n</script>\r\n\r\n<style>\r\n  :global(.toasts) {\r\n    list-style: none;\r\n    position: fixed;\r\n    top: 5.8%;\r\n    right: 39.25%;\r\n    padding: 0;\r\n    margin: 0;\r\n    z-index: 9999;\r\n  }\r\n\r\n  :global(.toasts) > .toast {\r\n    position: relative;\r\n    margin: 10px;\r\n    min-width: 20vw;\r\n    position: relative;\r\n    animation: animate-in 350ms forwards;\r\n    color: #fff;\r\n  }\r\n\r\n  :global(.toasts) > .toast > .content {\r\n    padding: 10px;\r\n    display: block;\r\n    font-weight: 500;\r\n  }\r\n\r\n  :global(.toasts) > .toast > .progress {\r\n    position: absolute;\r\n    bottom: 0;\r\n    background-color: rgb(0, 0, 0, 0.3);\r\n    height: 6px;\r\n    width: 100%;\r\n    animation-name: shrink;\r\n    animation-timing-function: linear;\r\n    animation-fill-mode: forwards;\r\n  }\r\n\r\n  :global(.toasts) > .toast:before,\r\n  :global(.toasts) > .toast:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    z-index: -1;\r\n    top: 50%;\r\n    bottom: 0;\r\n    left: 10px;\r\n    right: 10px;\r\n    border-radius: 100px / 10px;\r\n  }\r\n\r\n  :global(.toasts) > .toast:after {\r\n    right: 10px;\r\n    left: auto;\r\n    transform: skew(8deg) rotate(3deg);\r\n  }\r\n\r\n  @keyframes animate-in {\r\n    0% {\r\n      width: 0;\r\n      opacity: 0;\r\n      transform: scale(1.15) translateY(20px);\r\n    }\r\n    100% {\r\n      width: 30vw;\r\n      opacity: 1;\r\n      transform: scale(1) translateY(0);\r\n    }\r\n  }\r\n\r\n  @keyframes shrink {\r\n    0% {\r\n      width: 30vw;\r\n    }\r\n    100% {\r\n      width: 0;\r\n    }\r\n  }\r\n</style>\r\n\r\n<ul class=\"toasts\">\r\n  {#each toasts as toast (toast.id)}\r\n    <li class=\"toast\" style=\"background: {toast.background};\" out:animateOut>\r\n      <div class=\"content\">{toast.msg}</div>\r\n      <div\r\n        class=\"progress\"\r\n        style=\"animation-duration: {toast.timeout}ms;\"\r\n        on:animationend={() => removeToast(toast.id)} />\r\n    </li>\r\n  {/each}\r\n</ul>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n  import AuthRoute from \"./AuthRoute.svelte\";\r\n</script>\r\n\r\n<style>\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<AuthRoute />\r\n<div in:fade={{ duration: 500 }}>\r\n  <h1>Home Page</h1>\r\n</div>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n</script>\r\n\r\n<style>\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<div in:fade={{ duration: 500 }}>\r\n  <h1>404 Error: Page Not Found</h1>\r\n</div>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n</script>\r\n\r\n<style>\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<div in:fade={{ duration: 500 }}>\r\n  <h1>Forgot Password Page</h1>\r\n</div>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n  import { push, pop, replace } from \"svelte-spa-router\";\r\n  import { getClient, query, mutate } from \"svelte-apollo\";\r\n  import { activateAccount } from \"../authMethods.js\";\r\n  import { notifications } from \"../Noto.svelte\";\r\n  import AuthRoute from \"../AuthRoute.svelte\";\r\n\r\n  const client = getClient();\r\n\r\n  let email = \"\";\r\n  let code = \"\";\r\n  let formIsDisabled = false;\r\n\r\n  async function handleSubmit() {\r\n    formIsDisabled = true;\r\n\r\n    setTimeout(() => {\r\n      formIsDisabled = false;\r\n    }, 2000);\r\n\r\n    if (email.trim().length === 0 || code.trim().length === 0) {\r\n      email = \"\";\r\n      code = \"\";\r\n      return notifications.danger(\"Email or code fields can not be empty\");\r\n    }\r\n\r\n    try {\r\n      await activateAccount(client, email, code);\r\n    } catch (error) {\r\n      // console.log(error);\r\n      notifications.danger(\"Please make sure your code and email are correct\");\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 10rem;\r\n  }\r\n  .card {\r\n    width: 22rem;\r\n    height: 20rem;\r\n  }\r\n  h3 {\r\n    text-align: center;\r\n    font-size: 25px;\r\n  }\r\n  h6 {\r\n    text-align: center;\r\n    color: rgb(193, 193, 193);\r\n  }\r\n  /* label {\r\n    margin-top: 10px;\r\n    font-size: 20px;\r\n  } */\r\n  .btn {\r\n    margin-top: 10px;\r\n    width: 310px;\r\n    height: 50px;\r\n  }\r\n  .form-group {\r\n    margin-top: 15px;\r\n  }\r\n  .card-header {\r\n    background-color: rgb(0, 45, 66);\r\n    width: 22rem;\r\n    margin-top: -20px;\r\n    margin-left: -20px;\r\n    color: white;\r\n  }\r\n</style>\r\n\r\n<AuthRoute />\r\n<main>\r\n  <div class=\"card\" in:fade={{ duration: 500 }}>\r\n    <div class=\"card-body\">\r\n      <div class=\"card-header\">\r\n        <h3 class=\"card-title\">Verify Account</h3>\r\n        <h6 class=\"card-subtitle mb-2\">\r\n          Please enter your email and the code that was sent to your email\r\n        </h6>\r\n      </div>\r\n      <form on:submit|preventDefault={handleSubmit}>\r\n        <fieldset disabled={formIsDisabled}>\r\n          <div class=\"form-group\">\r\n            <!-- <label for=\"exampleInputEmail1\">Email address</label> -->\r\n            <input\r\n              bind:value={email}\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter email\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input\r\n              bind:value={code}\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputText1\"\r\n              aria-describedby=\"textHelp\"\r\n              placeholder=\"Enter code\" />\r\n          </div>\r\n\r\n          <button type=\"submit\" class=\"btn btn-primary\">\r\n            <h5>Confirm Account</h5>\r\n          </button>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import { onMount, getContext } from \"svelte\";\r\n  import { push, pop, replace } from \"svelte-spa-router\";\r\n  import { fade } from \"svelte/transition\";\r\n  import { getClient, query, mutate } from \"svelte-apollo\";\r\n  import AuthRoute from \"../AuthRoute.svelte\";\r\n  import {\r\n    login,\r\n    fetchUser,\r\n    fetchConnections,\r\n    fetchShifts,\r\n    tokenRefreshTimeoutFunc\r\n  } from \"../authMethods.js\";\r\n  import { user, selectedCompany } from \"../store.js\";\r\n  import { notifications } from \"../Noto.svelte\";\r\n  // if ($isLoggedIn === true) {\r\n  //   push(\"/dashboard/\");\r\n  // }\r\n\r\n  const client = getClient();\r\n  let email = \"\";\r\n  let password = \"\";\r\n  let isKeepMeLoggedIn = false;\r\n  let formIsDisabled = false;\r\n\r\n  async function handleSubmit() {\r\n    formIsDisabled = true;\r\n\r\n    setTimeout(() => {\r\n      formIsDisabled = false;\r\n    }, 2000);\r\n\r\n    if (email.trim().length === 0 || password.trim().length === 0) {\r\n      const msg = \"Email or password fields can not be empty!\";\r\n      return notifications.danger(msg, 3000);\r\n    }\r\n\r\n    try {\r\n      await login(client, email, password, isKeepMeLoggedIn).then(async () => {\r\n        // tokenRefreshTimeoutFunc(client);\r\n        // await fetchUser(client);\r\n        // await fetchConnections(client);\r\n        // if ($user.isCompany) {\r\n        //   await fetchShifts(client, $user.id);\r\n        // }\r\n        // push(\"/dashboard/\");\r\n      });\r\n    } catch (error) {\r\n      // console.log(error);\r\n      password = \"\";\r\n      let msg = \"Please make sure your email and password are correct!\";\r\n      notifications.danger(msg, 3000);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 10rem;\r\n  }\r\n  .card {\r\n    width: 22rem;\r\n    height: 30rem;\r\n  }\r\n  h3 {\r\n    text-align: center;\r\n    font-size: 25px;\r\n  }\r\n  h6 {\r\n    text-align: center;\r\n    color: rgb(193, 193, 193);\r\n  }\r\n  /* label {\r\n    margin-top: 10px;\r\n    font-size: 20px;\r\n  } */\r\n  .btn {\r\n    margin-top: 10px;\r\n    width: 310px;\r\n    height: 50px;\r\n  }\r\n  .form-group {\r\n    margin-top: 15px;\r\n  }\r\n  .card-header {\r\n    background-color: rgb(0, 45, 66);\r\n    width: 22rem;\r\n    margin-top: -20px;\r\n    margin-left: -20px;\r\n    color: white;\r\n  }\r\n  .ca {\r\n    padding: 10px 0px;\r\n    text-align: center;\r\n  }\r\n  .fp {\r\n    margin: -10px 0px;\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<AuthRoute />\r\n<main>\r\n  <div class=\"card\" in:fade={{ duration: 500 }}>\r\n    <div class=\"card-body\">\r\n      <div class=\"card-header\">\r\n        <h3 class=\"card-title\">Log into SwapBoard</h3>\r\n        <h6 class=\"card-subtitle mb-2\">\r\n          Please enter your email and password to login\r\n        </h6>\r\n      </div>\r\n      <form on:submit|preventDefault={handleSubmit}>\r\n        <fieldset disabled={formIsDisabled}>\r\n          <div class=\"form-group {formIsDisabled}\">\r\n            <!-- <label for=\"exampleInputEmail1\">Email address</label> -->\r\n            <input\r\n              bind:value={email}\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter email\"\r\n              required />\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <!-- <label for=\"exampleInputPassword1\">Password</label> -->\r\n            <input\r\n              bind:value={password}\r\n              type=\"password\"\r\n              class=\"form-control password\"\r\n              id=\"exampleInputPassword1\"\r\n              placeholder=\"Password\"\r\n              required\r\n              minlength=\"8\"\r\n              maxlength=\"30\" />\r\n          </div>\r\n          <div class=\"form-group form-check\">\r\n            <input\r\n              bind:checked={isKeepMeLoggedIn}\r\n              type=\"checkbox\"\r\n              class=\"form-check-input\"\r\n              id=\"exampleCheck1\" />\r\n            <label class=\"form-check-label\" for=\"exampleCheck1\">\r\n              keep me logged in\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\">\r\n            <h5>Login</h5>\r\n          </button>\r\n          <p class=\"form-text text-muted ca\">\r\n            Not registered?\r\n            <a href=\"#/signup\">Create an account</a>\r\n          </p>\r\n          <p class=\"form-text text-muted fp\">\r\n            <a href=\"#/recoveraccount\">Forgort Password?</a>\r\n          </p>\r\n          <p class=\"form-text text-muted ca\">\r\n            <a href=\"#/verifyaccount\">Verify your account?</a>\r\n          </p>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import { push, pop, replace } from \"svelte-spa-router\";\r\n  import { getClient, query, mutate } from \"svelte-apollo\";\r\n  import { CREATE_USER } from \"../queries.js\";\r\n  import { fade } from \"svelte/transition\";\r\n  import { isLoggedIn } from \"../store.js\";\r\n  import { notifications } from \"../Noto.svelte\";\r\n  import { register } from \"../authMethods.js\";\r\n  import AuthRoute from \"../AuthRoute.svelte\";\r\n\r\n  // if ($isLoggedIn === true) {\r\n  //   push(\"/dashboard/\");\r\n  // }\r\n\r\n  const client = getClient();\r\n\r\n  let userTypeChoices = [\r\n    { id: 0, text: `Signup as company or employee` },\r\n    { id: 1, text: `Employee` },\r\n    { id: 2, text: `Company` }\r\n  ];\r\n\r\n  let selectedUserType = userTypeChoices;\r\n  let name = \"\";\r\n  let placeHolderName = \"\";\r\n  let email = \"\";\r\n  let password = \"\";\r\n  let confirmPassword = \"\";\r\n  let isCompany = false;\r\n  let formIsDisabled = false;\r\n\r\n  $: if (selectedUserType.id === 1) {\r\n    placeHolderName = \"your name\";\r\n  } else if (selectedUserType.id === 2) {\r\n    placeHolderName = \"company name\";\r\n  } else {\r\n    placeHolderName = \"company or employee name\";\r\n  }\r\n\r\n  async function handleSubmit() {\r\n    formIsDisabled = true;\r\n\r\n    setTimeout(() => {\r\n      formIsDisabled = false;\r\n    }, 2000);\r\n\r\n    if (name.trim().length === 0) {\r\n      name = \"\";\r\n      return notifications.danger(\"You must enter a name\");\r\n    }\r\n\r\n    if (email.trim().length === 0) {\r\n      email = \"\";\r\n      return notifications.danger(\"You must enter an email\");\r\n    }\r\n\r\n    if (selectedUserType.id === 1) {\r\n      isCompany = false;\r\n    } else if (selectedUserType.id === 2) {\r\n      isCompany = true;\r\n    } else {\r\n      return notifications.danger(\"You must signup as a company or employee!\");\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      password = \"\";\r\n      confirmPassword = \"\";\r\n      return notifications.danger(\"Your passwords do not match!\");\r\n    }\r\n\r\n    try {\r\n      await register(client, isCompany, name, email, password);\r\n    } catch (error) {\r\n      return notifications.danger(\"Email already exist\");\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 5rem;\r\n  }\r\n  .card {\r\n    width: 25rem;\r\n    height: 37rem;\r\n  }\r\n  h3 {\r\n    text-align: center;\r\n    font-size: 25px;\r\n  }\r\n  h6 {\r\n    text-align: center;\r\n    color: rgb(193, 193, 193);\r\n  }\r\n  /* label {\r\n    margin-top: 10px;\r\n    font-size: 20px;\r\n  } */\r\n  .btn {\r\n    margin-top: 10px;\r\n    width: 22.5rem;\r\n    height: 50px;\r\n  }\r\n  .form-group {\r\n    margin-top: 15px;\r\n  }\r\n  .card-header {\r\n    background-color: rgb(0, 45, 66);\r\n    width: 25rem;\r\n    margin-top: -20px;\r\n    margin-left: -20px;\r\n    color: white;\r\n  }\r\n  p {\r\n    padding: 10px 0px;\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<AuthRoute />\r\n<main>\r\n  <div class=\"card .mx-auto\" in:fade={{ duration: 500 }}>\r\n    <div class=\"card-body\">\r\n      <div class=\"card-header\">\r\n        <h3 class=\"card-title\">Create Account</h3>\r\n        <h6 class=\"card-subtitle mb-2\">\r\n          Please fill in the form below to create an account on SwapBoard\r\n        </h6>\r\n      </div>\r\n      <form class=\"form-group\" on:submit|preventDefault={handleSubmit}>\r\n        <fieldset disabled={formIsDisabled}>\r\n          <div class=\"form-group\">\r\n            <select\r\n              aria-describedby=\"inputGroupSelect01\"\r\n              bind:value={selectedUserType}\r\n              class=\"custom-select\">\r\n              {#each userTypeChoices as choice}\r\n                <option value={choice}>{choice.text}</option>\r\n              {/each}\r\n            </select>\r\n            <small id=\"inputGroupSelect01\" class=\"form-text text-muted note\">\r\n              Please note that you can not change this later.\r\n            </small>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <!-- <label for=\"exampleInputPassword1\">Password</label> -->\r\n            <input\r\n              bind:value={name}\r\n              type=\"text\"\r\n              class=\"form-control text\"\r\n              id=\"exampleInputText1\"\r\n              placeholder={placeHolderName}\r\n              required\r\n              maxlength=\"60\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <!-- <label for=\"exampleInputEmail1\">Email address</label> -->\r\n            <input\r\n              bind:value={email}\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter a valid email address\"\r\n              required />\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <!-- <label for=\"exampleInputPassword1\">Password</label> -->\r\n            <input\r\n              bind:value={password}\r\n              type=\"password\"\r\n              class=\"form-control password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              minlength=\"8\"\r\n              maxlength=\"30\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <!-- <label for=\"exampleInputPassword1\">Password</label> -->\r\n            <input\r\n              bind:value={confirmPassword}\r\n              type=\"password\"\r\n              class=\"form-control password\"\r\n              id=\"confirmPassword\"\r\n              placeholder=\"Confirm Password\"\r\n              required\r\n              minlength=\"8\"\r\n              maxlength=\"30\" />\r\n          </div>\r\n          <div class=\"form-group form-check\" />\r\n          <button type=\"submit\" class=\"btn btn-primary\">\r\n            <h5>SignUp</h5>\r\n          </button>\r\n          <p class=\"form-text text-muted\">\r\n            Already registered?\r\n            <a href=\"#/login\">Login</a>\r\n            or\r\n            <a href=\"#/verifyaccount\">Verify your account</a>\r\n          </p>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n</script>\r\n\r\n<style>\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<div in:fade={{ duration: 500 }}>\r\n  <h1>Recover Account Page</h1>\r\n</div>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n  import Router, { push, pop, replace } from \"svelte-spa-router\";\r\n  import { getClient, mutate } from \"svelte-apollo\";\r\n  import { SEND_INVITATION } from \"../queries.js\";\r\n  import { notifications } from \"../Noto.svelte\";\r\n\r\n  const client = getClient();\r\n\r\n  let email = \"\";\r\n  let formIsDisabled = false;\r\n\r\n  function handleSubmit() {\r\n    if (!email) {\r\n      return;\r\n    }\r\n\r\n    sendInvitation();\r\n  }\r\n\r\n  async function sendInvitation() {\r\n    formIsDisabled = true;\r\n    try {\r\n      await mutate(client, {\r\n        mutation: SEND_INVITATION,\r\n        variables: { employeeEmail: email }\r\n      }).then(result => {\r\n        console.log(result.data.createUserConnection.userConnection);\r\n        notifications.success(\"Invite Sent!\");\r\n        email = \"\";\r\n        formIsDisabled = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      notifications.danger(\"Something went wrong, please try again!\");\r\n      formIsDisabled = false;\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding-top: 5rem;\r\n  }\r\n  .card-body {\r\n    width: 18rem;\r\n    height: 10rem;\r\n  }\r\n</style>\r\n\r\n<main in:fade={{ duration: 500 }}>\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <form on:submit|preventDefault={handleSubmit}>\r\n        <fieldset disabled={formIsDisabled}>\r\n          <div class=\"form-group\">\r\n            <input\r\n              bind:value={email}\r\n              type=\"email\"\r\n              id=\"email\"\r\n              class=\"form-control\"\r\n              required\r\n              placeholder=\"Enter employee email\" />\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Send Invite</button>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { fade } from \"svelte/transition\";\r\n  import Router, { push, pop, replace } from \"svelte-spa-router\";\r\n  import { routes } from \"../DashBoardRoutes.svelte\";\r\n  import { isLoggedIn, refreshToken, user, connections } from \"../store.js\";\r\n  import { getClient, query, mutate } from \"svelte-apollo\";\r\n  import { GET_USER, GET_CONNECTIONS } from \"../queries.js\";\r\n\r\n  function timeout(ns) {\r\n    return new Promise(resolve => setTimeout(resolve, ns));\r\n  }\r\n\r\n  const client = getClient();\r\n  let pingCount = 0;\r\n\r\n  const getUser = query(client, {\r\n    query: GET_USER\r\n  });\r\n\r\n  const getConnections = query(client, {\r\n    query: GET_CONNECTIONS\r\n  });\r\n\r\n  async function fetchUser() {\r\n    try {\r\n      await getUser.refetch().then(result => {\r\n        user.set(result.data.me);\r\n      });\r\n    } catch (error) {\r\n      // console.log(error);\r\n      await timeout(3000);\r\n      fetchUser();\r\n    }\r\n  }\r\n\r\n  async function fetchConnections() {\r\n    try {\r\n      await getConnections.refetch().then(result => {\r\n        connections.set(result.data.connections);\r\n        // console.log($connections);\r\n      });\r\n    } catch (error) {\r\n      // console.log(error);\r\n      await timeout(3000);\r\n      fetchConnections();\r\n    }\r\n  }\r\n\r\n  onMount(async () => {\r\n    // Set timeout only for testing\r\n    push(\"/dashboard/shifts\");\r\n  });\r\n</script>\r\n\r\n<style>\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n</style>\r\n\r\n<div in:fade={{ duration: 500 }} />\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { getClient, query } from \"svelte-apollo\";\r\n  import { GET_INVITATIONS } from \"../queries.js\";\r\n  import Invitation from \"./Invitation.svelte\";\r\n  import { invitations } from \"../store.js\";\r\n\r\n  const client = getClient();\r\n\r\n  const getInvitations = query(client, {\r\n    query: GET_INVITATIONS\r\n  });\r\n\r\n  async function fetchInvitations() {\r\n    try {\r\n      await getInvitations.refetch().then(result => {\r\n        invitations.set(result.data.invitations);\r\n        // console.log($invitations);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    fetchInvitations();\r\n  });\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <div>\r\n    {#if $invitations.length > 0}\r\n      {#each $invitations as invite}\r\n        <Invitation invitation={invite} />\r\n      {/each}\r\n    {:else}\r\n      <h5>\r\n        No new Invitation(s), please request an invite from your company's\r\n        admin!\r\n      </h5>\r\n    {/if}\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { fade } from \"svelte/transition\";\r\n  import { fly } from \"svelte/transition\";\r\n  import { quintOut } from \"svelte/easing\";\r\n  import {\r\n    isLoggedIn,\r\n    refreshToken,\r\n    user,\r\n    connections,\r\n    selectedCompany,\r\n    shifts,\r\n    myShifts,\r\n    menuDisplayed\r\n  } from \"../store.js\";\r\n  import { getClient, query, mutate } from \"svelte-apollo\";\r\n  import { GET_SHIFTS, PROPOSE_SHIFT } from \"../queries.js\";\r\n  import { notifications } from \"../Noto.svelte\";\r\n  import { formatDate } from \"timeUtils\";\r\n  import TableView from \"../TableView.svelte\";\r\n\r\n  // let shifts = [];\r\n  let selectedShift;\r\n  let clickedShift;\r\n  let showing = false;\r\n  let requestingShiftConnection = false;\r\n  let selectedCompanyId = \"\";\r\n  let dateFormat = \"#{l}, #{F} #{j}, #{Y} at #{H}:#{i}\";\r\n  let popoverX;\r\n  let popoverY;\r\n  let popoverWrapper;\r\n  let content;\r\n  let uls = [];\r\n  let heads = [\"From\", \"To\", \"Posted By\", \"Note\"];\r\n  let bodies = [];\r\n\r\n  const client = getClient();\r\n\r\n  // async function fetchShiftsFromInput() {\r\n  //   if (!selectedCompany) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   selectedCompanyId = selectedCompany.company.id;\r\n\r\n  //   fetchShifts();\r\n  // }\r\n\r\n  // async function fetchShifts() {\r\n  //   const getShifts = query(client, {\r\n  //     query: GET_SHIFTS,\r\n  //     variables: { companyId: selectedCompanyId }\r\n  //   });\r\n\r\n  //   try {\r\n  //     await getShifts.refetch().then(result => {\r\n  //       shifts.set(result.data.shifts);\r\n  //       myShifts = $shifts.filter(shift => shift.postedBy.id === $user.id);\r\n  //       // console.log(myShifts);\r\n  //       // console.log($shifts);\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // }\r\n\r\n  async function proposeShift() {\r\n    if (requestingShiftConnection === true) {\r\n      notifications.info(\"A Shift Request is in progress!\");\r\n      return;\r\n    }\r\n\r\n    if (!selectedShift || !clickedShift) {\r\n      notifications.danger(\"You must select a shift to propose\");\r\n      return;\r\n    }\r\n\r\n    requestingShiftConnection = true;\r\n\r\n    try {\r\n      await mutate(client, {\r\n        mutation: PROPOSE_SHIFT,\r\n        variables: {\r\n          proposedShiftId: selectedShift.id,\r\n          shiftId: clickedShift.id\r\n        }\r\n      }).then(result => {\r\n        console.log(result.data.createShiftConnection.shiftConnection);\r\n        notifications.success(\"Shift Request Sent\");\r\n        requestingShiftConnection = false;\r\n      });\r\n    } catch (error) {\r\n      notifications.danger(error.message);\r\n      requestingShiftConnection = false;\r\n    }\r\n  }\r\n\r\n  //   $: getShifts.refetch({ companyId: selectedCompanyId }).then(result => {\r\n  //     shifts.set(result);\r\n  //     //console.log($shifts);\r\n  //   });\r\n\r\n  //   $: if (Object.getOwnPropertyNames(selectedCompany) === 0) {\r\n  //     console.log(selectedCompany.company.id);\r\n  //   }\r\n\r\n  function handleClickedShift(shift, tr) {\r\n    if (requestingShiftConnection === true) {\r\n      notifications.info(\"A Shift Request is in progress!\");\r\n      return;\r\n    }\r\n\r\n    if (showing === true && clickedShift.id === shift.id) {\r\n      showing = false;\r\n      clickedShift = null;\r\n      popoverWrapper.style.display = \"none\";\r\n      return;\r\n    }\r\n\r\n    showing = false;\r\n    selectedShift = null;\r\n    popoverWrapper.style.display = \"inline-block\";\r\n\r\n    let contentRect = content.getBoundingClientRect();\r\n    let trRect = tr.getBoundingClientRect();\r\n    let popoverContentRect = popoverWrapper.firstChild.getBoundingClientRect();\r\n\r\n    popoverX = trRect.left; //+ trRect.width / 2 - popoverContentRect.width / 2;\r\n    popoverY =\r\n      trRect.top + trRect.height / 3 - contentRect.height + window.scrollY;\r\n    popoverWrapper.style.left = popoverX + \"px\";\r\n    popoverWrapper.style.top = popoverY + \"px\";\r\n\r\n    clickedShift = $shifts.find(x => x.id === shift.id);\r\n\r\n    setTimeout(() => {\r\n      showing = true;\r\n    }, 1);\r\n  }\r\n\r\n  // onMount(() => {\r\n  //   if ($user.isCompany) {\r\n  //     selectedCompanyId = $user.id;\r\n  //     fetchShifts();\r\n  //   }\r\n  // });\r\n\r\n  // $: if ($selectedCompany) {\r\n  //   selectedCompanyId = $selectedCompany.id;\r\n\r\n  //   if (selectedCompanyId) {\r\n  //     fetchShifts();\r\n  //   }\r\n  // }\r\n\r\n  $: if ($shifts.length > 0) {\r\n    $shifts.forEach(element => {\r\n      let shiftDisplay = {\r\n        id: element.id,\r\n        From: formatDate(new Date(element.fromTime), dateFormat),\r\n        To: formatDate(new Date(element.toTime), dateFormat),\r\n        \"Posted By\":\r\n          element.postedBy.userprofile.firstName +\r\n          \" \" +\r\n          element.postedBy.userprofile.lastName,\r\n        Note: element.note\r\n      };\r\n      bodies = [...bodies, shiftDisplay];\r\n    });\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n  }\r\n  #form {\r\n    width: 200px;\r\n    height: 2rem;\r\n    padding-top: 65px;\r\n    justify-content: center;\r\n    margin: auto;\r\n  }\r\n\r\n  #form.menuDisplayed {\r\n    padding-left: 200px;\r\n    width: 400px;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    #form.menuDisplayed {\r\n      padding-left: 0px;\r\n      width: 200px;\r\n    }\r\n  }\r\n\r\n  .content {\r\n    width: 100%;\r\n    margin-top: 0 auto;\r\n    display: inline-block;\r\n  }\r\n  #empty-container {\r\n    margin-top: 55px;\r\n    background-color: white;\r\n    height: 55px;\r\n    z-index: 999;\r\n  }\r\n  #empty-container.menuDisplayed {\r\n    margin-left: 250px;\r\n  }\r\n\r\n  #inner-list-group {\r\n    cursor: pointer;\r\n  }\r\n\r\n  #inner-list-group:hover {\r\n    color: darkgrey;\r\n  }\r\n\r\n  .popover__title {\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    text-decoration: none;\r\n    color: rgb(228, 68, 68);\r\n    text-align: center;\r\n    padding: 15px 0;\r\n  }\r\n\r\n  #popover__wrapper {\r\n    position: relative;\r\n    display: inline-block;\r\n  }\r\n  .popover__content {\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    position: absolute;\r\n    background-color: #f5f5f5;\r\n    padding: 1.5rem;\r\n    margin-top: -12px;\r\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\r\n    transform: translate(0, 10px);\r\n    width: 248px;\r\n  }\r\n  .popover__content:before {\r\n    position: absolute;\r\n    z-index: -1;\r\n    content: \"\";\r\n    right: calc(50% - 10px);\r\n    top: -8px;\r\n    border-style: solid;\r\n    border-width: 0 10px 10px 10px;\r\n    border-color: transparent transparent #f5f5f5 transparent;\r\n    transition-duration: 0.3s;\r\n    transition-property: transform;\r\n  }\r\n  #popover__wrapper.show .popover__content {\r\n    z-index: 10;\r\n    opacity: 1;\r\n    visibility: visible;\r\n    transform: translate(0, -20px);\r\n    transition: all 0.5s cubic-bezier(0.75, -0.02, 0.2, 0.97);\r\n  }\r\n\r\n  #popover__wrapper.hide .popover__content {\r\n    visibility: hidden;\r\n  }\r\n\r\n  p {\r\n    text-align: center;\r\n  }\r\n  h5 {\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<main in:fade={{ duration: 500 }}>\r\n\r\n  <!-- {#if !$user.isCompany}\r\n    {#if $connections.length > 0}\r\n      <div\r\n        id=\"empty-container\"\r\n        class=\"{$menuDisplayed ? 'menuDisplayed' : ''} fixed-top\" />\r\n      <div id=\"form\" class=\"{$menuDisplayed ? 'menuDisplayed' : ''} fixed-top\">\r\n        <div class=\"input-group mb-3\">\r\n          <select\r\n            on:change={fetchShiftsFromInput}\r\n            bind:value={selectedCompany}\r\n            id=\"company-selector\"\r\n            class=\"custom-select\">\r\n            <option value=\"\" selected disabled hidden>Select Company</option>\r\n            {#each $connections as choice}\r\n              <option value={choice}>\r\n                {choice.company.userprofile.companyName}\r\n              </option>\r\n            {/each}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    {/if}\r\n  {/if} -->\r\n  {#if $connections.length < 1}\r\n    {#if !$user.isCompany}\r\n      <div>\r\n        <h5>\r\n          You are not a member of any company yet, please request an invite from\r\n          your company's admin to start swapping shifts with your colleagues.\r\n        </h5>\r\n      </div>\r\n    {:else}\r\n      <div>\r\n        <h5>\r\n          You do not have any staff on your company yet, please send invites to\r\n          your employees for them to start swapping shifts.\r\n        </h5>\r\n      </div>\r\n    {/if}\r\n  {:else}\r\n    <div bind:this={content} class=\"content\">\r\n      {#if bodies.length > 0}\r\n        <TableView {heads} {bodies} handleClick={handleClickedShift} />\r\n      {:else if $user.isCompany}\r\n        <h5>No shifts posted to your company yet!</h5>\r\n      {:else}\r\n        <h5>Select a company at the top to view and swap shifts!</h5>\r\n      {/if}\r\n      <div\r\n        bind:this={popoverWrapper}\r\n        id=\"popover__wrapper\"\r\n        class={showing ? 'show' : 'hide'}>\r\n        <div class=\"popover__content\">\r\n          {#if clickedShift}\r\n            {#if !$user.isCompany}\r\n              {#if $user.id !== clickedShift.postedBy.id}\r\n                {#if $myShifts.length > 0}\r\n                  <div class=\"input-group mb-3\">\r\n                    <select\r\n                      bind:value={selectedShift}\r\n                      id=\"myShift-selector\"\r\n                      class=\"custom-select\">\r\n                      <option value=\"\" selected disabled hidden>\r\n                        Select shift to propose\r\n                      </option>\r\n                      {#each $myShifts as choice}\r\n                        <option value={choice}>\r\n                          <p>\r\n                            {'Starts ' + formatDate(new Date(choice.fromTime), dateFormat) + ' Ends ' + formatDate(new Date(choice.toTime), dateFormat)}\r\n                          </p>\r\n                        </option>\r\n                      {/each}\r\n                    </select>\r\n                  </div>\r\n                {:else}\r\n                  <p>\r\n                    You do not have any shift to propose, post shift to start\r\n                    swapping.\r\n                  </p>\r\n                {/if}\r\n                {#if selectedShift}\r\n                  <p>\r\n                    Starts {formatDate(new Date(selectedShift.fromTime), dateFormat)}\r\n                  </p>\r\n                  <p>\r\n                    Ends {formatDate(new Date(selectedShift.toTime), dateFormat)}\r\n                  </p>\r\n                  <button on:click={proposeShift} class=\"btn btn-primary\">\r\n                    Propose Selected Shift\r\n                  </button>\r\n                {/if}\r\n              {:else}\r\n                <p>This is your shift!!!</p>\r\n              {/if}\r\n            {:else}\r\n              <p>This shift was posted to your company.</p>\r\n            {/if}\r\n          {/if}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n</main>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n  import { getClient, mutate } from \"svelte-apollo\";\r\n  import { notifications } from \"../Noto.svelte\";\r\n  import { POST_SHIFT } from \"../queries.js\";\r\n  import { shifts, myShifts, connections, selectedCompany } from \"../store.js\";\r\n  import { formatDate } from \"timeUtils\";\r\n  import Datepicker from \"svelte-calendar\";\r\n\r\n  const client = getClient();\r\n\r\n  let fromTime;\r\n  let toTime;\r\n  let note = \"\";\r\n  let isSponsored = false;\r\n  let companyId;\r\n  let company;\r\n  let dateFormat = \"#{l}, #{F} #{j}, #{Y}\";\r\n  let fromDate = formatDate(new Date(), dateFormat);\r\n  let toDate = formatDate(new Date(), dateFormat);\r\n  let fromCalendarStartDate = new Date();\r\n  let toCalendarStartDate = new Date();\r\n  let toCalendarEndDate = new Date();\r\n  let fromHour = 0;\r\n  let toHour = 0;\r\n  let fromMinute = 0;\r\n  let toMinute = 0;\r\n  let hourList = new Array(24);\r\n  let minuteList = new Array(60);\r\n  let fromClicked = false;\r\n  let fromDateChosen = false;\r\n  let toDateChosen = false;\r\n\r\n  for (var i = 0; i < hourList.length; i++) {\r\n    hourList[i] = i;\r\n  }\r\n\r\n  for (var i = 0; i < minuteList.length; i++) {\r\n    minuteList[i] = i;\r\n  }\r\n\r\n  // toCalendarStartDate = formatDate(toCalendarStartDate, dateFormat);\r\n  // fromCalendarStartDate = formatDate(fromCalendarStartDate, dateFormat);\r\n\r\n  async function postShift() {\r\n    try {\r\n      await mutate(client, {\r\n        mutation: POST_SHIFT,\r\n        variables: {\r\n          fromTime: fromTime,\r\n          toTime: toTime,\r\n          note: note,\r\n          isSponsored: isSponsored,\r\n          companyId: companyId\r\n        }\r\n      }).then(result => {\r\n        $myShifts = [...$myShifts, result.data.createShift.shift];\r\n        $shifts = [...$shifts, result.data.createShift.shift];\r\n        notifications.success(\"Congrats, your shift has been posted\");\r\n        // console.log($myShifts);\r\n      });\r\n    } catch (error) {\r\n      notifications.danger(\r\n        \"Sorry, there was an error while posting your shift\"\r\n      );\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit() {\r\n    company = $selectedCompany;\r\n    if (!company) {\r\n      notifications.danger(\"You must select a company to proceed\");\r\n      return;\r\n    }\r\n\r\n    fromTime = new Date(fromDate + \", \" + fromHour + \":\" + fromMinute);\r\n    toTime = new Date(toDate + \", \" + toHour + \":\" + toMinute);\r\n\r\n    if (fromTime >= toTime) {\r\n      notifications.danger(\"Shift end date must be higher than start date\");\r\n      return;\r\n    }\r\n\r\n    companyId = company.id;\r\n    isSponsored = false;\r\n\r\n    postShift();\r\n\r\n    // console.log(\"From: \" + fromTime);\r\n    // console.log(\"To: \" + toTime);\r\n    // console.log(note);\r\n    // console.log(companyId);\r\n  }\r\n\r\n  $: toDate = fromDate;\r\n  $: {\r\n    toCalendarStartDate = new Date(fromDate);\r\n    toCalendarEndDate.setDate(toCalendarStartDate.getDate() + 1);\r\n    // toCalendarEndDate = toCalendarEndDate;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  /* your styles go here */\r\n  main {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .jumbotron {\r\n    margin-top: 2rem;\r\n  }\r\n  .date-field {\r\n    width: 250px;\r\n    background-color: white;\r\n  }\r\n  .time-field {\r\n    width: 60px;\r\n    margin-bottom: 6px;\r\n  }\r\n  .postShift-btn {\r\n    margin-top: 5px;\r\n  }\r\n</style>\r\n\r\n<!-- markup (zero or more items) goes here -->\r\n<div in:fade={{ duration: 500 }}>\r\n  <main>\r\n    {#if $connections.length > 0}\r\n      {#if Object.entries($selectedCompany).length > 0}\r\n        <div in:fade={{ duration: 500 }} class=\"jumbotron\">\r\n          <form class=\"\" on:submit|preventDefault={handleSubmit}>\r\n            <div class=\"\">\r\n              <h5>From :</h5>\r\n              <Datepicker\r\n                format={dateFormat}\r\n                start={fromCalendarStartDate}\r\n                bind:formattedSelected={fromDate}\r\n                bind:dateChosen={fromDateChosen}\r\n                on:open={() => {\r\n                  fromClicked = true;\r\n                }}\r\n                on:close={() => {\r\n                  fromClicked = false;\r\n                }}>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control date-field\"\r\n                  value={fromDate}\r\n                  readonly\r\n                  placeholder=\"Pick a start date\" />\r\n\r\n              </Datepicker>\r\n              <select\r\n                bind:value={fromHour}\r\n                aria-describedby=\"inputGroupSelect01\"\r\n                class=\"custom-select time-field\">\r\n                {#each hourList as choice}\r\n                  <option value={choice}>\r\n                    {#if choice < 10}0{choice}{:else}{choice}{/if}\r\n                  </option>\r\n                {/each}\r\n              </select>\r\n              <select\r\n                bind:value={fromMinute}\r\n                aria-describedby=\"inputGroupSelect01\"\r\n                class=\"custom-select time-field\">\r\n                {#each minuteList as choice}\r\n                  <option value={choice}>\r\n                    {#if choice < 10}0{choice}{:else}{choice}{/if}\r\n                  </option>\r\n                {/each}\r\n              </select>\r\n            </div>\r\n            <div class=\"\">\r\n              <h5>To :</h5>\r\n              <Datepicker\r\n                format={dateFormat}\r\n                start={toCalendarStartDate}\r\n                bind:formattedSelected={toDate}\r\n                bind:dateChosen={toDateChosen}>\r\n                {#if !fromClicked}\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control date-field\"\r\n                    value={toDate}\r\n                    readonly\r\n                    placeholder=\"Pick a end date\" />\r\n                {/if}\r\n              </Datepicker>\r\n              <select\r\n                bind:value={toHour}\r\n                aria-describedby=\"inputGroupSelect01\"\r\n                class=\"custom-select time-field\">\r\n                {#each hourList as choice}\r\n                  <option value={choice}>\r\n                    {#if choice < 10}0{choice}{:else}{choice}{/if}\r\n                  </option>\r\n                {/each}\r\n              </select>\r\n              <select\r\n                bind:value={toMinute}\r\n                aria-describedby=\"inputGroupSelect01\"\r\n                class=\"custom-select time-field\">\r\n                {#each minuteList as choice}\r\n                  <option value={choice}>\r\n                    {#if choice < 10}0{choice}{:else}{choice}{/if}\r\n                  </option>\r\n                {/each}\r\n              </select>\r\n            </div>\r\n            <div class=\"\">\r\n              <h5>Note :</h5>\r\n              <textarea\r\n                bind:value={note}\r\n                class=\"form-control\"\r\n                name=\"note\"\r\n                id=\"note\"\r\n                cols=\"\"\r\n                rows=\"\"\r\n                placeholder=\"Enter a short note about this shift\" />\r\n            </div>\r\n            <!-- <div class=\"mb-3\">\r\n              <h5>Company :</h5>\r\n              <select bind:value={company} class=\"custom-select\">\r\n                <option value=\"\" selected disabled hidden>\r\n                  Select Company to post shift on\r\n                </option>\r\n                {#each $connections as choice}\r\n                  <option value={choice}>\r\n                    {choice.company.userprofile.companyName}\r\n                  </option>\r\n                {/each}\r\n              </select>\r\n            </div> -->\r\n            <div class=\"\">\r\n              <button\r\n                type=\"submit\"\r\n                class=\"btn btn-primary form-control postShift-btn\">\r\n                Post Shift\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      {:else}\r\n        <h5>Please select a company at the top to post shifts</h5>\r\n      {/if}\r\n    {:else}\r\n      <div>\r\n        <h5>\r\n          You are not a member of any company yet, please request an invite from\r\n          your company's admin to start swapping shifts with your colleagues.\r\n        </h5>\r\n      </div>\r\n    {/if}\r\n  </main>\r\n</div>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { fade } from \"svelte/transition\";\r\n  import { fly } from \"svelte/transition\";\r\n  import { quintOut } from \"svelte/easing\";\r\n  import {\r\n    isLoggedIn,\r\n    refreshToken,\r\n    user,\r\n    connections,\r\n    selectedCompany,\r\n    shifts,\r\n    myShifts,\r\n    shiftConnections,\r\n    menuDisplayed\r\n  } from \"../store.js\";\r\n  import {\r\n    fetchShiftConnections,\r\n    acceptShiftConnection\r\n  } from \"../authMethods.js\";\r\n  import { getClient, query, mutate } from \"svelte-apollo\";\r\n  import { GET_SHIFTS, PROPOSE_SHIFT } from \"../queries.js\";\r\n  import { notifications } from \"../Noto.svelte\";\r\n  import { formatDate } from \"timeUtils\";\r\n  import TableView from \"../TableView.svelte\";\r\n\r\n  // let shifts = [];\r\n  let selectedShift;\r\n  let proposedShiftConnections = [];\r\n  let clickedShift;\r\n  let showing = false;\r\n  let dateFormat = \"#{l}, #{F} #{j}, #{Y} at #{H}:#{i}\";\r\n  let popoverX;\r\n  let popoverY;\r\n  let popoverWrapper;\r\n  let content;\r\n  let uls = [];\r\n  let heads = [\"From\", \"To\", \"Posted By\", \"Note\"];\r\n  let bodies = [];\r\n\r\n  const client = getClient();\r\n\r\n  // async function fetchShiftsFromInput() {\r\n  //   if (!selectedCompany) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   selectedCompanyId = selectedCompany.company.id;\r\n\r\n  //   fetchShifts();\r\n  // }\r\n\r\n  // async function fetchShifts() {\r\n  //   const getShifts = query(client, {\r\n  //     query: GET_SHIFTS,\r\n  //     variables: { companyId: selectedCompanyId }\r\n  //   });\r\n\r\n  //   try {\r\n  //     await getShifts.refetch().then(result => {\r\n  //       shifts.set(result.data.shifts);\r\n  //       myShifts = $shifts.filter(shift => shift.postedBy.id === $user.id);\r\n  //       // console.log(myShifts);\r\n  //       // console.log($shifts);\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // }\r\n\r\n  //   async function proposeShift() {\r\n  //     if (requestingShiftConnection === true) {\r\n  //       notifications.info(\"A Shift Request is in progress!\");\r\n  //       return;\r\n  //     }\r\n\r\n  //     if (!selectedShift || !clickedShift) {\r\n  //       notifications.danger(\"You must select a shift to propose\");\r\n  //       return;\r\n  //     }\r\n\r\n  //     requestingShiftConnection = true;\r\n\r\n  //     try {\r\n  //       await mutate(client, {\r\n  //         mutation: PROPOSE_SHIFT,\r\n  //         variables: {\r\n  //           proposedShiftId: selectedShift.id,\r\n  //           shiftId: clickedShift.id\r\n  //         }\r\n  //       }).then(result => {\r\n  //         console.log(result.data.createShiftConnection.shiftConnection);\r\n  //         notifications.success(\"Shift Request Sent\");\r\n  //         requestingShiftConnection = false;\r\n  //       });\r\n  //     } catch (error) {\r\n  //       notifications.danger(\"Something went wrong! Please try again.\");\r\n  //       console.log(error);\r\n  //       requestingShiftConnection = false;\r\n  //     }\r\n  //   }\r\n\r\n  //   $: getShifts.refetch({ companyId: selectedCompanyId }).then(result => {\r\n  //     shifts.set(result);\r\n  //     //console.log($shifts);\r\n  //   });\r\n\r\n  //   $: if (Object.getOwnPropertyNames(selectedCompany) === 0) {\r\n  //     console.log(selectedCompany.company.id);\r\n  //   }\r\n\r\n  function handleClickedShift(shift, tr) {\r\n    if (showing === true && clickedShift.id === shift.id) {\r\n      showing = false;\r\n      clickedShift = null;\r\n      popoverWrapper.style.display = \"none\";\r\n      return;\r\n    }\r\n\r\n    showing = false;\r\n    popoverWrapper.style.display = \"inline-block\";\r\n\r\n    let contentRect = content.getBoundingClientRect();\r\n    let trRect = tr.getBoundingClientRect();\r\n    let popoverContentRect = popoverWrapper.firstChild.getBoundingClientRect();\r\n\r\n    popoverX = trRect.width / 2 - popoverContentRect.width / 2;\r\n    popoverY =\r\n      trRect.top + trRect.height / 3 - contentRect.height + window.scrollY;\r\n    popoverWrapper.style.left = popoverX + \"px\";\r\n    popoverWrapper.style.top = popoverY + \"px\";\r\n\r\n    clickedShift = shift;\r\n\r\n    proposedShiftConnections = $shiftConnections.filter(\r\n      shiftConnection => shiftConnection.shift.id === clickedShift.id\r\n    );\r\n\r\n    setTimeout(() => {\r\n      showing = true;\r\n    }, 1);\r\n  }\r\n\r\n  async function handleAcceptShiftProposal(id) {\r\n    // $shiftConnections.find(x => x.id === id).isAccepted = true;\r\n    try {\r\n      await acceptShiftConnection(client, id).then(result => {\r\n        $shiftConnections.find(x => x.id === id).isAccepted = true;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    showing = false;\r\n  }\r\n\r\n  onMount(async () => {\r\n    if (!$user.isCompany) {\r\n      if ($selectedCompany.id) {\r\n        await fetchShiftConnections(client, $selectedCompany.id);\r\n      }\r\n    }\r\n  });\r\n\r\n  $: if ($myShifts.length > 0) {\r\n    $myShifts.forEach(element => {\r\n      let shiftDisplay = {\r\n        id: element.id,\r\n        From: formatDate(new Date(element.fromTime), dateFormat),\r\n        To: formatDate(new Date(element.toTime), dateFormat),\r\n        \"Posted By\":\r\n          element.postedBy.userprofile.firstName +\r\n          \" \" +\r\n          element.postedBy.userprofile.lastName,\r\n        Note: element.note\r\n      };\r\n      bodies = [...bodies, shiftDisplay];\r\n    });\r\n  }\r\n\r\n  // $: if ($selectedCompany) {\r\n  //   selectedCompanyId = $selectedCompany.id;\r\n\r\n  //   if (selectedCompanyId) {\r\n  //     fetchShifts();\r\n  //   }\r\n  // }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n  }\r\n  #form {\r\n    width: 200px;\r\n    height: 2rem;\r\n    padding-top: 65px;\r\n    justify-content: center;\r\n    margin: auto;\r\n  }\r\n\r\n  #form.menuDisplayed {\r\n    padding-left: 200px;\r\n    width: 400px;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    #form.menuDisplayed {\r\n      padding-left: 0px;\r\n      width: 200px;\r\n    }\r\n  }\r\n\r\n  .content {\r\n    width: 100%;\r\n    margin-top: 10px;\r\n  }\r\n  #empty-container {\r\n    margin-top: 55px;\r\n    background-color: white;\r\n    height: 55px;\r\n    z-index: 999;\r\n  }\r\n  #empty-container.menuDisplayed {\r\n    margin-left: 250px;\r\n  }\r\n\r\n  #inner-list-group {\r\n    cursor: pointer;\r\n  }\r\n\r\n  #inner-list-group:hover {\r\n    color: darkgrey;\r\n  }\r\n\r\n  .popover__title {\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    text-decoration: none;\r\n    color: rgb(228, 68, 68);\r\n    text-align: center;\r\n    padding: 15px 0;\r\n  }\r\n\r\n  #popover__wrapper {\r\n    position: relative;\r\n    display: inline-block;\r\n  }\r\n  .popover__content {\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    position: absolute;\r\n    background-color: #f5f5f5;\r\n    padding: 1.5rem;\r\n    margin-top: -12px;\r\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\r\n    transform: translate(0, 10px);\r\n    /* width: 248px; */\r\n  }\r\n  .popover__content:before {\r\n    position: absolute;\r\n    z-index: -1;\r\n    content: \"\";\r\n    right: calc(50% - 10px);\r\n    top: -8px;\r\n    border-style: solid;\r\n    border-width: 0 10px 10px 10px;\r\n    border-color: transparent transparent #f5f5f5 transparent;\r\n    transition-duration: 0.3s;\r\n    transition-property: transform;\r\n  }\r\n  #popover__wrapper.show .popover__content {\r\n    z-index: 10;\r\n    opacity: 1;\r\n    visibility: visible;\r\n    transform: translate(0, -20px);\r\n    transition: all 0.5s cubic-bezier(0.75, -0.02, 0.2, 0.97);\r\n  }\r\n\r\n  #popover__wrapper.hide .popover__content {\r\n    visibility: hidden;\r\n  }\r\n\r\n  p {\r\n    text-align: center;\r\n  }\r\n  h5 {\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n<main in:fade={{ duration: 500 }}>\r\n  <!-- {#if !$user.isCompany}\r\n    {#if $connections.length > 0}\r\n      <div\r\n        id=\"empty-container\"\r\n        class=\"{$menuDisplayed ? 'menuDisplayed' : ''} fixed-top\" />\r\n      <div id=\"form\" class=\"{$menuDisplayed ? 'menuDisplayed' : ''} fixed-top\">\r\n        <div class=\"input-group mb-3\">\r\n          <select\r\n            on:change={fetchShiftsFromInput}\r\n            bind:value={selectedCompany}\r\n            id=\"company-selector\"\r\n            class=\"custom-select\">\r\n            <option value=\"\" selected disabled hidden>Select Company</option>\r\n            {#each $connections as choice}\r\n              <option value={choice}>\r\n                {choice.company.userprofile.companyName}\r\n              </option>\r\n            {/each}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    {/if}\r\n  {/if} -->\r\n  {#if $connections.length < 1}\r\n    {#if !$user.isCompany}\r\n      <div>\r\n        <h5>\r\n          You are not a member of any company yet, please request an invite from\r\n          your company's admin to start swapping shifts with your colleagues.\r\n        </h5>\r\n      </div>\r\n    {:else}\r\n      <div>\r\n        <h5>\r\n          You do not have any staff on your company yet, please send invites to\r\n          your employees for them to start swapping shifts.\r\n        </h5>\r\n      </div>\r\n    {/if}\r\n  {/if}\r\n  <div bind:this={content} class=\"content\">\r\n    {#if $myShifts.length > 0}\r\n      <TableView {heads} {bodies} handleClick={handleClickedShift} />\r\n    {:else}\r\n      <h5>Select a company at the top to view your shifts!</h5>\r\n    {/if}\r\n    <div\r\n      bind:this={popoverWrapper}\r\n      id=\"popover__wrapper\"\r\n      class={showing ? 'show' : 'hide'}>\r\n      <div class=\"popover__content\">\r\n        {#if proposedShiftConnections.length > 0}\r\n          {#each proposedShiftConnections as proposedShiftConnection}\r\n            <ul\r\n              id=\"inner-list-group\"\r\n              class=\"list-group list-group-action list-group-horizontal\r\n              list-group-flush\">\r\n              <li class=\"list-group-item flex-fill\">\r\n                {formatDate(new Date(proposedShiftConnection.proposedShift.fromTime), dateFormat)}\r\n              </li>\r\n              <li class=\"list-group-item flex-fill\">\r\n                {formatDate(new Date(proposedShiftConnection.proposedShift.toTime), dateFormat)}\r\n              </li>\r\n              <li class=\"list-group-item flex-fill\">\r\n                {proposedShiftConnection.proposedShift.postedBy.userprofile.firstName + ' ' + proposedShiftConnection.proposedShift.postedBy.userprofile.lastName}\r\n              </li>\r\n              {#if !proposedShiftConnection.isAccepted}\r\n                <button\r\n                  on:click={() => {\r\n                    handleAcceptShiftProposal(proposedShiftConnection.id);\r\n                  }}\r\n                  class=\"btn btn-primary\">\r\n                  Accept\r\n                </button>\r\n              {:else}\r\n                <li class=\"list-group-item flex-fill\">\r\n                  <p>Accepted</p>\r\n                </li>\r\n              {/if}\r\n            </ul>\r\n          {/each}\r\n        {:else}\r\n          <p>No proposals for this shift!</p>\r\n        {/if}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</main>\r\n",
    "<script>\n  import Month from './Month.svelte';\n  import NavBar from './NavBar.svelte';\n  import Popover from './Popover.svelte';\n  import { dayDict } from './lib/dictionaries';\n  import { getMonths, areDatesEquivalent } from './lib/helpers';\n  import { formatDate } from 'timeUtils';\n  import { keyCodes, keyCodesArray } from './lib/keyCodes';\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n  const today = new Date();\n\n  let popover;\n\n  export let format = '#{m}/#{d}/#{Y}';\n  export let start = new Date(1987, 9, 29);\n  export let end = new Date(2020, 9, 29);\n  export let selected = today;\n  export let dateChosen = false;\n  export let trigger = null;\n  export let selectableCallback = null;\n\n  let highlighted = today;\n  let shouldShakeDate = false;\n  let shakeHighlightTimeout;\n  let month = today.getMonth();\n  let year = today.getFullYear();\n\n  let isOpen = false;\n  let isClosing = false;\n\n  today.setHours(0, 0, 0, 0);\n\n  function assignmentHandler(formatted) {\n    if (!trigger) return;\n    trigger.innerHTML = formatted;\n  }\n\n  $: months = getMonths(start, end, selectableCallback);\n\n  let monthIndex = 0;\n  $: {\n    monthIndex = 0;\n    for (let i = 0; i < months.length; i += 1) {\n      if (months[i].month === month && months[i].year === year) {\n        monthIndex = i;\n      }\n    }\n  }\n  $: visibleMonth = months[monthIndex];\n\n  $: visibleMonthId = year + month / 100;\n  $: lastVisibleDate = visibleMonth.weeks[visibleMonth.weeks.length - 1].days[6].date;\n  $: firstVisibleDate = visibleMonth.weeks[0].days[0].date;\n  $: canIncrementMonth = monthIndex < months.length - 1;\n  $: canDecrementMonth = monthIndex > 0;\n\n  export let formattedSelected;\n  $: {\n    formattedSelected = formatDate(selected, format);\n  }\n\n  onMount(() => {\n    month = selected.getMonth();\n    year = selected.getFullYear();\n  });\n\n  function changeMonth(selectedMonth) {\n    month = selectedMonth;\n  }\n\n  function incrementMonth(direction, date) {\n    if (direction === 1 && !canIncrementMonth) return;\n    if (direction === -1 && !canDecrementMonth) return;\n    let current = new Date(year, month, 1);\n    current.setMonth(current.getMonth() + direction);\n    month = current.getMonth();\n    year = current.getFullYear();\n    highlighted = new Date(year, month, date || 1);\n  }\n\n  function getDefaultHighlighted() {\n    return new Date(selected);\n  }\n\n  function incrementDayHighlighted(amount) {\n    highlighted = new Date(highlighted);\n    highlighted.setDate(highlighted.getDate() + amount);\n    if (amount > 0 && highlighted > lastVisibleDate) {\n      return incrementMonth(1, highlighted.getDate());\n    }\n    if (amount < 0 && highlighted < firstVisibleDate) {\n      return incrementMonth(-1, highlighted.getDate());\n    }\n    return highlighted;\n  }\n\n  function getDay(m, date) {\n    for (let i = 0; i < m.weeks.length; i += 1) {\n      for (let j = 0; j < m.weeks[i].days.length; j += 1) {\n        if (areDatesEquivalent(m.weeks[i].days[j].date, date)) {\n          return m.weeks[i].days[j];\n        }\n      }\n    }\n    return null;\n  }\n\n  function checkIfVisibleDateIsSelectable(date) {\n    const day = getDay(visibleMonth, date);\n    if (!day) return false;\n    return day.selectable;\n  }\n\n  function shakeDate(date) {\n    clearTimeout(shakeHighlightTimeout);\n    shouldShakeDate = date;\n    shakeHighlightTimeout = setTimeout(() => {\n      shouldShakeDate = false;\n    }, 700);\n  }\n\n  function assignValueToTrigger(formatted) {\n    assignmentHandler(formatted);\n  }\n\n  function registerSelection(chosen) {\n    if (!checkIfVisibleDateIsSelectable(chosen)) return shakeDate(chosen);\n    // eslint-disable-next-line\n    close();\n    selected = chosen;\n    dateChosen = true;\n    assignValueToTrigger(formattedSelected);\n    return dispatch('dateSelected', { date: chosen });\n  }\n\n  function handleKeyPress(evt) {\n    if (keyCodesArray.indexOf(evt.keyCode) === -1) return;\n    evt.preventDefault();\n    switch (evt.keyCode) {\n      case keyCodes.left:\n        incrementDayHighlighted(-1);\n        break;\n      case keyCodes.up:\n        incrementDayHighlighted(-7);\n        break;\n      case keyCodes.right:\n        incrementDayHighlighted(1);\n        break;\n      case keyCodes.down:\n        incrementDayHighlighted(7);\n        break;\n      case keyCodes.pgup:\n        incrementMonth(-1);\n        break;\n      case keyCodes.pgdown:\n        incrementMonth(1);\n        break;\n      case keyCodes.escape:\n        // eslint-disable-next-line\n        close();\n        break;\n      case keyCodes.enter:\n        registerSelection(highlighted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  function registerClose() {\n    document.removeEventListener('keydown', handleKeyPress);\n    dispatch('close');\n  }\n\n  function close() {\n    popover.close();\n    registerClose();\n  }\n\n  function registerOpen() {\n    highlighted = getDefaultHighlighted();\n    month = selected.getMonth();\n    year = selected.getFullYear();\n    document.addEventListener('keydown', handleKeyPress);\n    dispatch('open');\n  }\n</script>\n\n<div class=\"datepicker\" class:open=\"{isOpen}\" class:closing=\"{isClosing}\">\n  <Popover\n    bind:this=\"{popover}\"\n    bind:open=\"{isOpen}\"\n    bind:shrink=\"{isClosing}\"\n    {trigger}\n    on:opened=\"{registerOpen}\"\n    on:closed=\"{registerClose}\"\n  >\n    <div slot=\"trigger\">\n      <slot>\n        {#if !trigger}\n        <button class=\"calendar-button\" type=\"button\">\n          {formattedSelected}\n        </button>\n        {/if}\n      </slot>\n    </div>\n    <div slot=\"contents\">\n      <div class=\"calendar\">\n        <NavBar {month} {year} {start} {end} {canIncrementMonth}\n        {canDecrementMonth} on:monthSelected={e => changeMonth(e.detail)}\n        on:incrementMonth={e => incrementMonth(e.detail)} />\n        <div class=\"legend\">\n          {#each dayDict as day}\n          <span>{day.abbrev}</span>\n          {/each}\n        </div>\n        <Month {visibleMonth} {selected} {highlighted} {shouldShakeDate} {start}\n        {end} id={visibleMonthId} on:dateSelected={e => registerSelection(e.detail)} />\n      </div>\n    </div>\n  </Popover>\n</div>\n\n<style>\n  .datepicker {\n    display: inline-block;\n    margin: 0 auto;\n    text-align: center;\n    overflow: visible;\n  }\n\n  .calendar-button {\n    padding: 10px 20px;\n    border: 1px solid #eee;\n    display: block;\n    text-align: center;\n    width: 300px;\n    text-decoration: none;\n    cursor: pointer;\n    background: #fff;\n    border-radius: 7px;\n    box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  .calendar {\n    box-sizing: border-box;\n    position: relative;\n    overflow: hidden;\n    user-select: none;\n    width: 100vw;\n    padding: 10px;\n    padding-top: 0;\n  }\n\n  @media (min-width: 480px) {\n    .calendar {\n      height: auto;\n      width: 340px;\n      max-width: 100%;\n    }\n  }\n\n  .legend {\n    color: #4a4a4a;\n    padding: 10px 0;\n    margin-bottom: 5px;\n  }\n\n  .legend span {\n    width: 14.285714%;\n    display: inline-block;\n    text-align: center;\n  }\n</style>\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n  import { getClient, mutate } from \"svelte-apollo\";\r\n  import { CONFIRM_INVITATION } from \"../queries.js\";\r\n  import { invitations } from \"../store.js\";\r\n  import { notifications } from \"../Noto.svelte\";\r\n  import { formatDate } from \"timeUtils\";\r\n\r\n  export let invitation;\r\n  const client = getClient();\r\n  let dateFormat = \"#{l}, #{F} #{j}, #{Y} at #{H}:#{i}\";\r\n\r\n  async function confirmInvitation() {\r\n    try {\r\n      await mutate(client, {\r\n        mutation: CONFIRM_INVITATION,\r\n        variables: { invitationId: invitation.id }\r\n      }).then(result => {\r\n        var invite = result.data.confirmUserConnection.userConnection;\r\n        var foundIndex = $invitations.findIndex(x => x.id === invite.id);\r\n        $invitations[foundIndex] = invite;\r\n        notifications.success(\r\n          \"Congratulations! You have successfully joined \" +\r\n            invite.company.userprofile.companyName,\r\n          4000\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      notifications.danger(\"Something went wrong, please try again!\");\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 25rem;\r\n    height: 15rem;\r\n    padding-top: 2rem;\r\n  }\r\n</style>\r\n\r\n<main in:fade={{ transition: 500 }}>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      Invitation sent on {formatDate(new Date(invitation.created), dateFormat)}\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <h5 class=\"card-title\">\r\n        From {invitation.company.userprofile.companyName}\r\n      </h5>\r\n      {#if invitation.isConfirmed}\r\n        <p class=\"card-text\">\r\n          You can now post and swap shifts with your colleagues in this company.\r\n        </p>\r\n        <h5>You have already accepted this invitation!</h5>\r\n      {:else if invitation.isDeclined}\r\n        <p class=\"card-text\">\r\n          You need to request another invite from your company's admin.\r\n        </p>\r\n        <h5>You declined this invitation!</h5>\r\n      {:else}\r\n        <p class=\"card-text\">\r\n          Please accept invitation to post and swap shifts with your colleagues.\r\n        </p>\r\n        <button class=\"btn btn-primary\" on:click={confirmInvitation}>\r\n          Accept\r\n        </button>\r\n      {/if}\r\n      <!-- <a href=\"#\" class=\"btn btn-primary\">Decline</a> -->\r\n    </div>\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  // your script goes here\r\n\r\n  export let heads;\r\n  export let bodies;\r\n  export let trs = [];\r\n  export let handleClick;\r\n</script>\r\n\r\n<style>\r\n  /* your styles go here */\r\n  * {\r\n    font-family: sans-serif; /* Change your font family */\r\n  }\r\n\r\n  .content-table {\r\n    position: relative;\r\n    border-collapse: collapse;\r\n    margin: 0 auto;\r\n    font-size: 0.9em;\r\n    min-width: 600px;\r\n    border-radius: 0px 0px 0 0;\r\n    /* overflow: hidden; */\r\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  .content-table thead tr {\r\n    background-color: #009879;\r\n    color: #ffffff;\r\n    text-align: left;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .content-table th,\r\n  .content-table td {\r\n    padding: 12px 15px;\r\n  }\r\n\r\n  .content-table tbody tr {\r\n    border-bottom: 1px solid #dddddd;\r\n  }\r\n\r\n  .content-table tbody tr:nth-of-type(even) {\r\n    background-color: #f3f3f3;\r\n  }\r\n\r\n  .content-table tbody tr:last-of-type {\r\n    border-bottom: 2px solid #009879;\r\n  }\r\n\r\n  .content-table tbody tr.active-row {\r\n    font-weight: bold;\r\n    color: #009879;\r\n  }\r\n\r\n  .content-table th {\r\n    background-color: #009879;\r\n    position: sticky;\r\n    position: -webkit-sticky;\r\n    top: 55px;\r\n  }\r\n</style>\r\n\r\n<!-- markup (zero or more items) goes here -->\r\n\r\n<div>\r\n  <table class=\"content-table\">\r\n    <thead>\r\n      <tr>\r\n        {#each heads as head}\r\n          <th>{head}</th>\r\n        {/each}\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {#each bodies as body, i}\r\n        <tr\r\n          bind:this={trs[i]}\r\n          on:click={() => {\r\n            handleClick(body, trs[i]);\r\n          }}>\r\n          {#each heads as key}\r\n            <td>{body[key]}</td>\r\n          {/each}\r\n        </tr>\r\n      {/each}\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
    "<script>\n  import Week from './Week.svelte';\n\n  export let id;\n  export let visibleMonth;\n  export let selected;\n  export let start;\n  export let end;\n  export let highlighted;\n  export let shouldShakeDate;\n\n  let lastId = id;\n  let direction;\n\n  $: {\n    direction = lastId < id ? 1 : -1;\n    lastId = id;\n  }\n</script>\n\n<div class=\"month-container\">\n  {#each visibleMonth.weeks as week (week.id) }\n    <Week \n      days={week.days} \n      {selected} \n      {start} \n      {end} \n      {highlighted} \n      {shouldShakeDate} \n      {direction}\n      on:dateSelected \n    />\n  {/each}\n</div>\n\n<style>\n  .month-container { \n    width: 100%;\n    display: -ms-grid;\n    display: grid;\n    -ms-grid-columns: 1fr;\n    -ms-grid-rows: 1fr;\n  }\n</style>\n",
    "<script>\n  import { monthDict } from './lib/dictionaries';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let month;\n  export let start;\n  export let end;\n  export let year;\n  export let canIncrementMonth;\n  export let canDecrementMonth;\n\n  let monthSelectorOpen = false;\n  let availableMonths;\n\n  $: {\n    let isOnLowerBoundary = start.getFullYear() === year;\n    let isOnUpperBoundary = end.getFullYear() === year;\n    availableMonths = monthDict.map((m, i) => {\n      return {\n        ...m,\n        selectable:\n          (!isOnLowerBoundary && !isOnUpperBoundary)\n        || (\n          (!isOnLowerBoundary || i >= start.getMonth())\n          && (!isOnUpperBoundary || i <= end.getMonth())\n        )\n      };\n    });\n  }\n\n  function toggleMonthSelectorOpen() {\n    monthSelectorOpen = !monthSelectorOpen;\n  }\n\n  function monthSelected(event, m) {\n    event.stopPropagation();\n    dispatch('monthSelected', m);\n    toggleMonthSelectorOpen();\n  }\n</script>\n\n<div class=\"title\">\n  <div class=\"heading-section\">\n    <div class=\"control\" \n      class:enabled={canDecrementMonth}\n      on:click={() => dispatch('incrementMonth', -1)}>\n      <i class=\"arrow left\"></i>\n    </div>\n    <div class=\"label\" on:click={toggleMonthSelectorOpen}>\n      {monthDict[month].name} {year}\n    </div> \n    <div class=\"control\"\n      class:enabled={canIncrementMonth}\n      on:click={() => dispatch('incrementMonth', 1)}>\n      <i class=\"arrow right\"></i>\n    </div>\n  </div>\n  <div class=\"month-selector\" class:open={monthSelectorOpen}>\n    {#each availableMonths as monthDefinition, index}\n      <div \n        class=\"month-selector--month\" \n        class:selected={index === month}\n        class:selectable={monthDefinition.selectable}\n        on:click={e => monthSelected(e, index)}\n      >\n        <span>{monthDefinition.abbrev}</span>\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .heading-section { \n    font-size: 20px;\n    padding: 24px 15px;\n    display: flex;\n    justify-content: space-between;\n    color: #3d4548;\n    font-weight: bold;\n  }\n  .label { \n    cursor: pointer;\n  }\n  .month-selector { \n    position: absolute;\n    top: 75px; \n    left: 0; \n    right: 0; \n    bottom: 0; \n    background-color: #fff;\n    transition: all 300ms; \n    transform: scale(1.2); \n    opacity: 0; \n    visibility: hidden;\n    z-index: 1;\n    text-align: center;\n  }\n  .month-selector.open { \n    transform: scale(1); \n    visibility: visible;\n    opacity: 1;\n  }\n  .month-selector--month { \n    width: 31.333%; \n    margin: .5%; \n    height: 23%;\n    display: inline-block;\n    color: #4a4a4a;\n    border: 1px solid #efefef;\n    opacity: 0.2;\n  }\n  .month-selector--month.selectable { \n    opacity: 1; \n  }\n  .month-selector--month.selectable:hover { \n    cursor: pointer;\n    box-shadow: 0px 0px 3px rgba(0,0,0,0.15);\n  }\n  .month-selector--month.selected { \n    background: #f7901e;\n    color: #fff;\n  }\n  .month-selector--month:before { \n    content: ' ';\n    display: inline-block;\n    height: 100%;\n    vertical-align: middle;\n  }\n  .month-selector--month span { \n    vertical-align: middle; \n    display: inline-block;\n  }\n\n  .control { \n    padding: 0 8px;\n    opacity: 0.2;\n    transform: translateY(3px);\n  }\n\n  .control.enabled { \n    opacity: 1; \n    cursor: pointer;\n  }\n\n  .arrow {\n    display: inline-block;\n    width: 18px;\n    height: 18px;\n    border-style: solid;\n    border-color: #a9a9a9;\n    border-width: 0;\n    border-bottom-width: 2px;\n    border-right-width: 2px;\n  }\n\n  .arrow.right {\n    transform: rotate(-45deg);\n    -webkit-transform: rotate(-45deg);\n  }\n\n  .arrow.left {\n    transform: rotate(135deg);\n    -webkit-transform: rotate(135deg);\n  }\n\n</style>\n",
    "<script>\n  import { onMount, createEventDispatcher, tick } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  let once = (el, evt, cb) => {\n    function handler() {\n      cb.apply(this, arguments);\n      el.removeEventListener(evt, handler);\n    }\n    el.addEventListener(evt, handler);\n  };\n\n  let popover;\n  let w;\n  let triggerContainer;\n  let contentsAnimated;\n  let contentsWrapper;\n  let translateY = 0;\n  let translateX = 0;\n\n  export let open = false;\n  export let shrink;\n  export let trigger;\n  export const close = () => {\n    shrink = true;\n    once(contentsAnimated, 'animationend', () => {\n      shrink = false;\n      open = false;\n      dispatch('closed');\n    });\n  };\n\n  function checkForFocusLoss(evt) {\n    if (!open) return;\n    let el = evt.target;\n    // eslint-disable-next-line\n    do {\n      if (el === popover) return;\n    } while (el = el.parentNode);\n    close();\n  }\n\n  onMount(() => {\n    document.addEventListener('click', checkForFocusLoss);\n    if (!trigger) return;\n    triggerContainer.appendChild(trigger.parentNode.removeChild(trigger));\n\n    // eslint-disable-next-line\n    return () => {\n      document.removeEventListener('click', checkForFocusLoss);\n    };\n  });\n\n  const getDistanceToEdges = async () => {\n    if (!open) { open = true; }\n    await tick();\n    let rect = contentsWrapper.getBoundingClientRect();\n    return {\n      top: rect.top + (-1 * translateY),\n      bottom: window.innerHeight - rect.bottom + translateY,\n      left: rect.left + (-1 * translateX),\n      right: document.body.clientWidth - rect.right + translateX\n    };\n  };\n\n  const getTranslate = async () => {\n    let dist = await getDistanceToEdges();\n    let x; let\n      y;\n    if (w < 480) {\n      y = dist.bottom;\n    } else if (dist.top < 0) {\n      y = Math.abs(dist.top);\n    } else if (dist.bottom < 0) {\n      y = dist.bottom;\n    } else {\n      y = 0;\n    }\n    if (dist.left < 0) {\n      x = Math.abs(dist.left);\n    } else if (dist.right < 0) {\n      x = dist.right;\n    } else {\n      x = 0;\n    }\n    return { x, y };\n  };\n\n  const doOpen = async () => {\n    const { x, y } = await getTranslate();\n\n    translateX = x;\n    translateY = y;\n    open = true;\n\n    dispatch('opened');\n  };\n</script>\n\n<svelte:window bind:innerWidth={w} />\n<div class=\"popover\" bind:this={popover}>\n  <div class=\"trigger\" on:click={doOpen} bind:this={triggerContainer}>\n    <slot name=\"trigger\">\n    </slot>\n  </div>\n  <div \n    class=\"contents-wrapper\" \n    class:visible={open}\n    class:shrink={shrink}\n    style=\"transform: translate(-50%,-50%) translate({translateX}px, {translateY}px)\" \n    bind:this={contentsWrapper}>\n    <div class=\"contents\" bind:this={contentsAnimated}>\n      <div class=\"contents-inner\">\n        <slot name=\"contents\"></slot>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n  .popover { \n    position: relative;\n  }\n\n  .contents-wrapper { \n    transform: translate(-50%, -50%); \n    position: absolute;\n    top: 50%; \n    left: 50%; \n    transition: none;\n    z-index: 2;\n    display: none;\n  }\n\n  .contents { \n    background: #fff;\n    box-shadow: 0px 10px 26px rgba(0,0,0,0.4) ;\n    opacity: .8; \n    padding-top: 0;\n    display: none;\n    animation: grow 200ms forwards cubic-bezier(.92,.09,.18,1.05);\n  }\n\n  .contents-inner { \n    animation: fadeIn 400ms forwards;\n  }\n\n  .contents-wrapper.visible { \n    display: block;\n  }\n\n  .contents-wrapper.visible .contents { \n    opacity: 1; \n    transform: scale(1);\n    display: block;\n  }\n\n  .contents-wrapper.shrink .contents { \n    animation: shrink 150ms forwards cubic-bezier(.92,.09,.18,1.05);\n  }\n\n  @keyframes grow { \n    0% { \n      transform: scale(.9,.1); \n      opacity: 0; \n    }\n    30% { \n      opacity: 1; \n    }\n    100% { \n      transform: scale(1);\n    }\n  }\n\n  @keyframes shrink { \n    0% { \n      transform: scale(1); \n      opacity: 1; \n    }\n    70% { \n      opacity: 1; \n    }\n    100% { \n      opacity: 0; \n      transform: scale(.9,.1);\n    }\n  }\n\n  @keyframes fadeIn { \n    0% { \n      opacity: 0; \n    }\n    50% { \n      opacity: 0;\n    }\n    100% { \n      opacity: 1; \n    }\n  }\n</style>",
    "<script>\n  import { areDatesEquivalent } from './lib/helpers';\n  import { fly, fade } from 'svelte/transition';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let days;\n  export let selected;\n  export let start;\n  export let end;\n  export let highlighted;\n  export let shouldShakeDate;\n  export let direction;\n</script>\n\n<div \n  class=\"week\" \n  in:fly={{ x: direction * 50, duration: 180, delay: 90 }}\n  out:fade={{ duration: 180 }}\n>\n  {#each days as day}\n    <div \n      class=\"day\" \n      class:outside-month={!day.partOfMonth}\n      class:is-today={day.isToday}\n      class:is-disabled={!day.selectable}\n    >\n      <button \n        class=\"day--label\" \n        class:selected={areDatesEquivalent(day.date, selected)}\n        class:highlighted={areDatesEquivalent(day.date, highlighted)}\n        class:shake-date={shouldShakeDate && areDatesEquivalent(day.date, shouldShakeDate)}\n        class:disabled={!day.selectable}\n        type=\"button\"\n        on:click={() => dispatch('dateSelected', day.date)}\n      >\n        {day.date.getDate()}\n      </button>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .week { \n    padding: 0;\n    margin: 0;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-flex-flow: row;\n    justify-content: space-around;\n    -ms-grid-column: 1;\n    grid-column: 1; \n  }\n  .week:nth-child(6n + 1) { \n    -ms-grid-row: 1; \n    grid-row: 1; \n  }\n  .week:nth-child(6n + 2) { \n    -ms-grid-row: 2; \n    grid-row: 2; \n  }\n  .week:nth-child(6n + 3) { \n    -ms-grid-row: 3; \n    grid-row: 3; \n  }\n  .week:nth-child(6n + 4) { \n    -ms-grid-row: 4; \n    grid-row: 4; \n  }\n  .week:nth-child(6n + 5) { \n    -ms-grid-row: 5; \n    grid-row: 5; \n  }\n  .week:nth-child(6n + 6) { \n    -ms-grid-row: 6; \n    grid-row: 6; \n  }\n  .day { \n    margin: 2px;\n    color: #4a4a4a;\n    font-weight: bold;\n    text-align: center;\n    font-size: 16px;\n    flex: 1 0 auto;\n    height: auto;\n    display: flex; \n    flex-basis: 0;\n  }\n  .day.outside-month, \n  .day.is-disabled { \n    opacity: 0.35;\n  }\n  .day:before { \n    content: '';\n    float: left;\n    padding-top: 100%;\n  }\n  .day--label { \n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    position: relative;\n    border: 1px solid #fff;\n    border-radius: 50%; \n    margin: 10%;\n    padding: 0;\n    align-items: center;\n    background: none;\n    cursor: pointer;\n    transition: all 100ms linear;\n    font-weight: normal;\n  }\n  .day--label.disabled { \n    cursor: default;\n  }\n  @media (min-width: 480px) { \n    .day--label.highlighted,\n    .day--label:not(.disabled):hover { \n      background: #efefef;\n      border-color: #efefef;\n    }\n  }\n  .day--label.shake-date { \n    animation: shake 0.4s 1 linear;\n  }\n  .day--label.selected:hover,\n  .day--label.selected,\n  .day--label:active:not(.disabled) { \n    background-color: #f7901e;\n    border-color: #f7901e;\n    color: #fff;\n  }\n  .day.is-today .day--label, \n  .day.is-today .day--label:hover { \n    opacity: 1; \n    background: none;\n    border-color: #f7901e;\n    color: #000;\n  }\n\n  @keyframes shake {\n    0% { transform: translate(7px); }\n    20% { transform: translate(-7px); }\n    40% { transform: translate(3px); }\n    60% { transform: translate(-3px); }\n    80% { transform: translate(1px); }\n    100% { transform: translate(0px); }\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}